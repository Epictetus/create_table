
# line 1 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
require 'create_table/version'
require 'create_table/parser'
require 'create_table/column_name_based_collection'

require 'create_table/column'
require 'create_table/index'
require 'create_table/unique'

# MAKE SURE YOU'RE EDITING THE .RL FILE !!!

=begin

# line 48 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"

=end

class CreateTable
  class << self
    def quote_ident(ident, options = {})
      @reserved_words ||= (IO.readlines(File.expand_path('../create_table/mysql_reserved.txt', __FILE__)) + IO.readlines(File.expand_path('../create_table/pg_reserved.txt', __FILE__))).map(&:chomp).sort.uniq
      quote_ident = options.fetch(:quote_ident, QUOTE_IDENT)
      if @reserved_words.include?(ident.upcase)
        quote_ident + ident + quote_ident
      else
        ident
      end
    end
  end

  include Parser

  QUOTE_IDENT = '"'
  BACKTICK = '`'

  attr_reader :columns
  attr_reader :indexes

  attr_accessor :table_name
  attr_accessor :temporary
  
  def initialize(sql = nil)
    @columns = ColumnNameBasedCollection.create
    @indexes = ColumnNameBasedCollection.create
    if sql
      parse sql
    end
  end

  def column_count
    columns.length
  end

  def primary_key=(column_name)
    if column_name.nil?
      @primary_key = nil
    else
      @primary_key = column_name.to_s
      i = Index.new self
      i.column_names = @primary_key
    end
    nil
  end

  def primary_key
    columns[@primary_key]
  end

  def parse_column(str)
    c = Column.new self
    c.parse str
    c
  end

  def add_unique(column_names)
    u = Unique.new self
    u.column_names = column_names
    u
  end

  def parse_unique(str)
    u = Unique.new self
    u.parse str
    u
  end

  def add_index(column_names, index_name = nil)
    i = Index.new self
    i.column_names = column_names
    i.name = index_name if index_name
    i
  end

  def parse_index(str)
    i = Index.new self
    i.parse str
    i
  end

  def create_table_sql(format, options)
    x = []
    x << 'CREATE'
    x << 'TEMPORARY' if temporary
    x << %{TABLE #{quoted_table_name(options)} (}
    x << columns.map { |c| c.to_sql(format, options) }.join(', ')
    x << ')'
    x.join ' '
  end

  def create_indexes_sql(format, options)
    indexes.map { |i| i.to_sql(format, options) }.compact
  end

  def to_sql(format, options)
    [create_table_sql(format, options)] + create_indexes_sql(format, options)
  end

  def to_postgresql(options = {})
    to_sql :postgresql, options
  end

  def to_mysql(options = {})
    defaults = { :quote_ident => BACKTICK }
    to_sql :mysql, defaults.merge(options)
  end

  def to_sqlite3(options = {})
    to_sql :sqlite3, options
  end

  def quoted_table_name(options)
    CreateTable.quote_ident table_name, options
  end

  def parse(str)
    data = Parser.remove_comments(str).unpack('c*')
    
# line 140 "/Users/seamusabshere/code/create_table/lib/create_table.rl.rb"
class << self
	attr_accessor :_parser_actions
	private :_parser_actions, :_parser_actions=
end
self._parser_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 2, 0, 8, 2, 0, 
	10, 2, 1, 7, 2, 1, 8, 2, 
	1, 9, 2, 1, 10, 2, 1, 11, 
	2, 5, 7, 2, 5, 8, 2, 5, 
	9, 2, 5, 10, 2, 5, 11, 2, 
	7, 1, 2, 7, 9, 2, 7, 11, 
	2, 8, 0, 2, 8, 1, 2, 8, 
	11, 2, 9, 10, 2, 9, 11, 2, 
	10, 0, 2, 10, 1, 3, 1, 9, 
	11, 3, 5, 8, 1, 3, 5, 9, 
	11, 3, 5, 10, 1, 3, 8, 1, 
	11, 3, 9, 10, 1
]

class << self
	attr_accessor :_parser_cond_offsets
	private :_parser_cond_offsets, :_parser_cond_offsets=
end
self._parser_cond_offsets = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 4, 6, 8, 10, 12, 
	14, 16, 18, 20, 20, 20, 20, 20, 
	20, 22, 24, 26, 28, 30, 32, 34, 
	36, 38, 40, 42, 44, 46, 48, 50, 
	52, 54, 56, 58, 60, 62, 64, 66, 
	68, 70, 72, 74, 76, 78, 80, 82, 
	84, 86, 86, 86, 86, 86, 86, 86, 
	86, 86, 86, 86, 86, 86, 86, 86, 
	86, 86, 88, 90, 92, 94, 96, 98, 
	100, 102, 104, 106, 108, 110, 112, 114, 
	116, 118, 120, 122, 124, 126, 128, 130, 
	132, 134, 136, 138, 140, 142, 144, 146, 
	148, 150, 152, 154, 156, 158, 160, 162, 
	164, 166, 168, 170, 172, 174, 176, 178, 
	180, 182, 184, 186, 188, 190, 192, 194, 
	196, 198, 200, 202, 204, 206, 208, 210, 
	212, 214, 216, 218, 220, 222, 224, 226, 
	228, 230, 232, 234, 236, 238, 240, 242, 
	244, 246, 248, 250, 252, 254, 256, 258, 
	260, 262, 264, 266, 268, 270, 272, 274, 
	276, 278, 280, 282, 284, 286, 288, 290, 
	292, 294, 296, 298, 300, 302, 304, 306, 
	308, 310, 312, 314, 316, 318, 320, 322, 
	324, 326, 328, 330, 332, 334, 336, 338, 
	340, 342, 344, 346, 348, 350, 352, 354, 
	356, 358, 360, 362, 364, 366, 368, 370, 
	372, 374, 376, 378, 380, 382, 384, 386, 
	388, 390, 392, 394, 396, 398, 400, 402, 
	404, 406, 408, 410, 412, 414, 416, 418, 
	420, 422, 424, 426, 428, 430, 432, 434, 
	436, 438, 440, 442, 444, 446, 448, 450, 
	452, 454, 456, 458, 460, 462, 464, 466, 
	468, 470, 472, 474, 476, 478, 480, 482, 
	484, 486, 488, 490, 492, 494, 496, 498, 
	500, 502, 504, 506, 508, 510, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 514, 516
]

class << self
	attr_accessor :_parser_cond_lengths
	private :_parser_cond_lengths, :_parser_cond_lengths=
end
self._parser_cond_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 2, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 0, 0, 0, 0, 0, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 2, 2, 2
]

class << self
	attr_accessor :_parser_cond_keys
	private :_parser_cond_keys, :_parser_cond_keys=
end
self._parser_cond_keys = [
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 41, 41, 44, 44, 
	41, 41, 44, 44, 0
]

class << self
	attr_accessor :_parser_cond_spaces
	private :_parser_cond_spaces, :_parser_cond_spaces=
end
self._parser_cond_spaces = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_parser_key_offsets
	private :_parser_key_offsets, :_parser_key_offsets=
end
self._parser_key_offsets = [
	0, 0, 5, 7, 9, 11, 13, 15, 
	18, 23, 27, 29, 31, 33, 36, 45, 
	50, 61, 65, 84, 99, 110, 112, 123, 
	143, 156, 159, 172, 185, 198, 211, 224, 
	237, 250, 263, 273, 280, 282, 284, 286, 
	288, 290, 292, 295, 300, 302, 304, 308, 
	317, 322, 334, 338, 343, 345, 347, 349, 
	351, 353, 358, 369, 389, 402, 415, 428, 
	441, 452, 465, 478, 491, 504, 517, 530, 
	539, 550, 580, 591, 602, 638, 658, 671, 
	684, 697, 710, 723, 736, 749, 762, 775, 
	791, 811, 824, 837, 850, 863, 876, 889, 
	905, 923, 936, 949, 965, 991, 1011, 1041, 
	1057, 1073, 1094, 1107, 1120, 1133, 1146, 1159, 
	1172, 1185, 1198, 1208, 1221, 1234, 1247, 1260, 
	1273, 1285, 1315, 1326, 1337, 1353, 1366, 1379, 
	1392, 1405, 1418, 1434, 1454, 1467, 1480, 1493, 
	1506, 1517, 1530, 1543, 1579, 1609, 1641, 1673, 
	1705, 1737, 1769, 1801, 1833, 1865, 1897, 1921, 
	1953, 1985, 2017, 2049, 2081, 2113, 2145, 2177, 
	2209, 2241, 2273, 2305, 2337, 2369, 2401, 2433, 
	2465, 2497, 2529, 2561, 2593, 2625, 2657, 2689, 
	2721, 2750, 2770, 2783, 2796, 2809, 2822, 2835, 
	2848, 2864, 2882, 2895, 2908, 2924, 2950, 2970, 
	3000, 3016, 3032, 3045, 3058, 3071, 3084, 3097, 
	3113, 3145, 3177, 3209, 3241, 3265, 3276, 3306, 
	3317, 3328, 3344, 3380, 3410, 3442, 3458, 3490, 
	3522, 3554, 3586, 3618, 3650, 3682, 3714, 3738, 
	3770, 3802, 3834, 3866, 3898, 3930, 3962, 3994, 
	4026, 4058, 4090, 4122, 4154, 4186, 4218, 4250, 
	4282, 4314, 4346, 4378, 4410, 4442, 4474, 4506, 
	4538, 4567, 4587, 4600, 4613, 4626, 4639, 4652, 
	4665, 4681, 4699, 4712, 4725, 4741, 4767, 4787, 
	4817, 4833, 4849, 4862, 4875, 4888, 4901, 4914, 
	4930, 4950, 4963, 4976, 4989, 5002, 5013, 5026, 
	5039, 5071, 5103, 5135, 5167, 5191, 5223, 5255, 
	5287, 5319, 5351, 5383, 5415, 5447, 5476, 5508, 
	5540, 5572, 5604, 5636, 5665, 5697, 5729, 5761, 
	5793, 5825, 5857, 5889, 5921, 5950, 5982, 6014, 
	6046, 6078, 6110, 6139, 6152, 6165, 6178, 6191, 
	6215, 6245, 6256, 6272, 6285, 6298, 6311, 6324, 
	6337, 6350, 6363, 6392, 6422, 6433, 6449, 6462, 
	6475, 6488, 6501, 6514, 6527, 6540, 6553, 6566, 
	6573, 6586, 6599, 6612, 6625, 6638, 6651, 6664, 
	6677, 6690, 6703, 6716, 6729, 6742, 6755, 6768, 
	6781, 6784, 6786, 6788, 6790, 6792, 6794, 6796, 
	6798, 6801, 6806, 6808, 6811, 6831, 6847, 6863
]

class << self
	attr_accessor :_parser_trans_keys
	private :_parser_trans_keys, :_parser_trans_keys=
end
self._parser_trans_keys = [
	32, 67, 99, 9, 13, 82, 114, 69, 
	101, 65, 97, 84, 116, 69, 101, 32, 
	9, 13, 32, 84, 116, 9, 13, 65, 
	69, 97, 101, 66, 98, 76, 108, 69, 
	101, 32, 9, 13, 32, 34, 96, 9, 
	13, 65, 90, 95, 122, 95, 65, 90, 
	97, 122, 32, 34, 96, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 40, 9, 
	13, 32, 34, 67, 73, 75, 80, 85, 
	96, 99, 105, 107, 112, 117, 9, 13, 
	65, 90, 95, 122, 67, 73, 75, 80, 
	85, 95, 99, 105, 107, 112, 117, 65, 
	90, 97, 122, 32, 34, 96, 9, 13, 
	48, 57, 65, 90, 95, 122, 40, 41, 
	40, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 32, 34, 41, 67, 73, 
	75, 80, 85, 96, 99, 105, 107, 112, 
	117, 9, 13, 65, 90, 95, 122, 32, 
	34, 79, 96, 111, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 9, 13, 32, 
	34, 78, 96, 110, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 83, 96, 
	115, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 34, 84, 96, 116, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 34, 
	82, 96, 114, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 65, 96, 97, 
	9, 13, 48, 57, 66, 90, 95, 122, 
	32, 34, 73, 96, 105, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 78, 
	96, 110, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 84, 96, 116, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	95, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 80, 85, 112, 117, 9, 13, 
	82, 114, 73, 105, 77, 109, 65, 97, 
	82, 114, 89, 121, 32, 9, 13, 32, 
	75, 107, 9, 13, 69, 101, 89, 121, 
	32, 40, 9, 13, 32, 34, 96, 9, 
	13, 65, 90, 95, 122, 95, 65, 90, 
	97, 122, 32, 34, 41, 96, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 41, 
	9, 13, 32, 41, 44, 9, 13, 78, 
	110, 73, 105, 81, 113, 85, 117, 69, 
	101, 32, 40, 41, 9, 13, 40, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 32, 40, 73, 75, 105, 107, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 127, 40, 78, 110, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 68, 100, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	69, 101, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 88, 120, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 69, 101, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 89, 121, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 32, 34, 
	78, 96, 110, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 68, 96, 100, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 34, 69, 96, 101, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 88, 
	96, 120, 9, 13, 48, 57, 65, 90, 
	95, 122, 40, 41, 95, 48, 57, 65, 
	90, 97, 122, 40, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 32, 34, 
	40, 96, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 40, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 32, 34, 40, 67, 73, 75, 
	80, 85, 96, 99, 105, 107, 112, 117, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 40, 95, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 64, 65, 90, 91, 96, 97, 122, 
	123, 127, 40, 79, 111, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	78, 110, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 83, 115, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 84, 116, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 82, 
	114, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 65, 97, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 73, 105, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 78, 110, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 84, 116, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 32, 
	40, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 127, 32, 
	40, 80, 85, 112, 117, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 40, 82, 114, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 73, 105, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 77, 109, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 65, 97, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	82, 114, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 89, 121, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 32, 40, 75, 107, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 40, 69, 101, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 89, 121, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 32, 40, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 127, 32, 34, 40, 
	96, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 40, 
	95, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 64, 65, 90, 91, 96, 97, 
	122, 123, 127, 32, 34, 40, 96, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 32, 34, 41, 44, 67, 73, 75, 
	80, 85, 96, 99, 105, 107, 112, 117, 
	9, 13, 65, 90, 95, 122, 32, 34, 
	69, 96, 101, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 89, 96, 121, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 34, 82, 96, 114, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 73, 
	96, 105, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 77, 96, 109, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	34, 65, 96, 97, 9, 13, 48, 57, 
	66, 90, 95, 122, 32, 34, 82, 96, 
	114, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 34, 89, 96, 121, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 95, 
	9, 13, 48, 57, 65, 90, 97, 122, 
	32, 34, 78, 96, 110, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 73, 
	96, 105, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 81, 96, 113, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	34, 85, 96, 117, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 69, 96, 
	101, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 40, 41, 95, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 34, 40, 
	96, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 40, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 40, 78, 110, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 73, 
	105, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 81, 113, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 85, 117, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 69, 101, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 32, 40, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 32, 40, 73, 75, 105, 107, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 127, 40, 78, 
	110, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 68, 100, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 69, 101, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 88, 120, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 69, 101, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 89, 121, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 32, 
	34, 40, 67, 73, 75, 80, 85, 96, 
	99, 105, 107, 112, 117, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 64, 65, 90, 91, 94, 95, 
	122, 123, 127, 40, 67, 73, 75, 80, 
	85, 95, 99, 105, 107, 112, 117, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	127, 32, 34, 40, 79, 96, 111, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 78, 96, 110, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 83, 96, 115, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 84, 96, 116, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 82, 96, 114, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 65, 96, 97, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 66, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 73, 96, 105, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 78, 96, 110, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 84, 96, 116, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 40, 95, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	127, 32, 34, 40, 78, 96, 110, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 68, 96, 100, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 69, 96, 101, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 88, 96, 120, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 69, 96, 101, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 89, 96, 121, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 82, 96, 114, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 73, 96, 105, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 77, 96, 109, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 65, 96, 97, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 66, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 82, 96, 114, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 78, 96, 110, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 73, 96, 105, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 81, 96, 113, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 85, 96, 117, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 69, 96, 101, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 79, 96, 111, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 78, 96, 110, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 83, 96, 115, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 84, 96, 116, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 82, 96, 114, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 65, 96, 97, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 66, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 73, 96, 105, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 78, 96, 110, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 84, 96, 116, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 40, 95, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 96, 97, 122, 123, 127, 32, 40, 
	80, 85, 112, 117, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 40, 82, 114, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	73, 105, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 77, 109, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 65, 97, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 82, 
	114, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 89, 121, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	32, 40, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 127, 
	32, 40, 75, 107, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 40, 69, 101, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	89, 121, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 32, 40, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 127, 32, 34, 40, 96, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 40, 95, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 64, 65, 90, 91, 96, 97, 122, 
	123, 127, 32, 34, 40, 96, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 94, 95, 122, 123, 127, 
	32, 40, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 127, 
	32, 40, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 127, 
	40, 78, 110, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 73, 105, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 81, 113, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	85, 117, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 69, 101, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 32, 34, 40, 78, 96, 110, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 68, 96, 100, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 69, 96, 101, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 88, 96, 120, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 40, 95, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	127, 40, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 32, 34, 40, 96, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 40, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	32, 40, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 127, 
	32, 34, 40, 67, 73, 75, 80, 85, 
	96, 99, 105, 107, 112, 117, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 40, 67, 73, 75, 
	80, 85, 95, 99, 105, 107, 112, 117, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 64, 65, 90, 91, 96, 97, 122, 
	123, 127, 32, 34, 40, 79, 96, 111, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 40, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 32, 34, 40, 78, 96, 110, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 83, 96, 115, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 84, 96, 116, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 82, 96, 114, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 65, 96, 97, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 66, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 73, 96, 105, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 78, 96, 110, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 84, 96, 116, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 40, 95, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 96, 97, 122, 
	123, 127, 32, 34, 40, 78, 96, 110, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 68, 96, 100, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 69, 96, 101, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 88, 96, 120, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 69, 96, 101, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 89, 96, 121, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 82, 96, 114, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 73, 96, 105, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 77, 96, 109, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 65, 96, 97, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 66, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 82, 96, 114, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 78, 96, 110, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 73, 96, 105, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 81, 96, 113, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 85, 96, 117, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 69, 96, 101, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 79, 96, 111, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 78, 96, 110, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 83, 96, 115, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 84, 96, 116, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 82, 96, 114, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 65, 96, 97, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 66, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 73, 96, 105, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 78, 96, 110, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 34, 40, 84, 96, 116, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 47, 48, 57, 
	58, 64, 65, 90, 91, 94, 95, 122, 
	123, 127, 32, 40, 95, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 96, 97, 122, 123, 127, 32, 
	40, 80, 85, 112, 117, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 40, 82, 114, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 73, 105, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 77, 109, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 65, 97, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	82, 114, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 89, 121, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 32, 40, 75, 107, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 127, 40, 69, 101, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 89, 121, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 32, 40, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 127, 32, 34, 40, 
	96, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 40, 
	95, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 64, 65, 90, 91, 96, 97, 
	122, 123, 127, 32, 34, 40, 96, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 40, 78, 110, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 73, 
	105, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 81, 113, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 85, 117, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 69, 101, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 32, 40, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 127, 32, 40, 73, 75, 105, 107, 
	297, 300, 553, 556, -128, 8, 9, 13, 
	14, 39, 42, 43, 45, 127, 40, 78, 
	110, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 40, 68, 100, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 69, 101, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 88, 120, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 69, 101, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 89, 121, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 32, 
	34, 40, 78, 96, 110, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 68, 96, 100, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 69, 96, 101, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 88, 96, 120, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 40, 
	95, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 96, 97, 122, 123, 127, 32, 
	34, 40, 69, 96, 101, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 89, 96, 121, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 82, 96, 114, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 73, 96, 105, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 77, 96, 109, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 65, 96, 97, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 66, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 82, 96, 114, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	34, 40, 89, 96, 121, 297, 300, 553, 
	556, -128, 8, 9, 13, 14, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 94, 95, 122, 123, 127, 32, 
	40, 95, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 96, 
	97, 122, 123, 127, 32, 34, 40, 78, 
	96, 110, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 73, 
	96, 105, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 81, 
	96, 113, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 85, 
	96, 117, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 34, 40, 69, 
	96, 101, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 47, 
	48, 57, 58, 64, 65, 90, 91, 94, 
	95, 122, 123, 127, 32, 40, 95, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	127, 32, 34, 40, 69, 96, 101, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 89, 96, 121, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 82, 96, 114, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 73, 96, 105, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 77, 96, 109, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 65, 96, 97, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 66, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 82, 96, 114, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 34, 40, 89, 96, 121, 297, 
	300, 553, 556, -128, 8, 9, 13, 14, 
	39, 42, 43, 45, 47, 48, 57, 58, 
	64, 65, 90, 91, 94, 95, 122, 123, 
	127, 32, 40, 95, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 96, 97, 122, 123, 127, 32, 34, 
	40, 78, 96, 110, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 34, 
	40, 73, 96, 105, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 34, 
	40, 81, 96, 113, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 34, 
	40, 85, 96, 117, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 34, 
	40, 69, 96, 101, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 32, 40, 
	95, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 47, 48, 
	57, 58, 64, 65, 90, 91, 96, 97, 
	122, 123, 127, 40, 78, 110, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	40, 68, 100, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 69, 101, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 88, 120, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	95, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 47, 48, 57, 58, 64, 65, 
	90, 91, 96, 97, 122, 123, 127, 32, 
	34, 40, 96, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	47, 48, 57, 58, 64, 65, 90, 91, 
	94, 95, 122, 123, 127, 40, 297, 300, 
	553, 556, -128, 39, 42, 43, 45, 127, 
	32, 40, 297, 300, 553, 556, -128, 8, 
	9, 13, 14, 39, 42, 43, 45, 127, 
	40, 69, 101, 297, 300, 553, 556, -128, 
	39, 42, 43, 45, 127, 40, 89, 121, 
	297, 300, 553, 556, -128, 39, 42, 43, 
	45, 127, 40, 78, 110, 297, 300, 553, 
	556, -128, 39, 42, 43, 45, 127, 40, 
	73, 105, 297, 300, 553, 556, -128, 39, 
	42, 43, 45, 127, 40, 81, 113, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 40, 85, 117, 297, 300, 553, 556, 
	-128, 39, 42, 43, 45, 127, 40, 69, 
	101, 297, 300, 553, 556, -128, 39, 42, 
	43, 45, 127, 32, 40, 95, 297, 300, 
	553, 556, -128, 8, 9, 13, 14, 39, 
	42, 43, 45, 47, 48, 57, 58, 64, 
	65, 90, 91, 96, 97, 122, 123, 127, 
	32, 34, 40, 96, 297, 300, 553, 556, 
	-128, 8, 9, 13, 14, 39, 42, 43, 
	45, 47, 48, 57, 58, 64, 65, 90, 
	91, 94, 95, 122, 123, 127, 40, 297, 
	300, 553, 556, -128, 39, 42, 43, 45, 
	127, 32, 40, 297, 300, 553, 556, -128, 
	8, 9, 13, 14, 39, 42, 43, 45, 
	127, 32, 34, 79, 96, 111, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 34, 
	78, 96, 110, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 83, 96, 115, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 34, 84, 96, 116, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 82, 
	96, 114, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 65, 96, 97, 9, 
	13, 48, 57, 66, 90, 95, 122, 32, 
	34, 73, 96, 105, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 78, 96, 
	110, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 34, 84, 96, 116, 9, 13, 
	48, 57, 65, 90, 95, 122, 95, 48, 
	57, 65, 90, 97, 122, 32, 34, 78, 
	96, 110, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 68, 96, 100, 9, 
	13, 48, 57, 65, 90, 95, 122, 32, 
	34, 69, 96, 101, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 88, 96, 
	120, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 34, 69, 96, 101, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 34, 
	89, 96, 121, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 82, 96, 114, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 34, 73, 96, 105, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 34, 77, 
	96, 109, 9, 13, 48, 57, 65, 90, 
	95, 122, 32, 34, 65, 96, 97, 9, 
	13, 48, 57, 66, 90, 95, 122, 32, 
	34, 82, 96, 114, 9, 13, 48, 57, 
	65, 90, 95, 122, 32, 34, 78, 96, 
	110, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 34, 73, 96, 105, 9, 13, 
	48, 57, 65, 90, 95, 122, 32, 34, 
	81, 96, 113, 9, 13, 48, 57, 65, 
	90, 95, 122, 32, 34, 85, 96, 117, 
	9, 13, 48, 57, 65, 90, 95, 122, 
	32, 34, 69, 96, 101, 9, 13, 48, 
	57, 65, 90, 95, 122, 32, 9, 13, 
	77, 109, 80, 112, 79, 111, 82, 114, 
	65, 97, 82, 114, 89, 121, 32, 9, 
	13, 32, 84, 116, 9, 13, 65, 97, 
	32, 9, 13, 32, 34, 41, 67, 73, 
	75, 80, 85, 96, 99, 105, 107, 112, 
	117, 9, 13, 65, 90, 95, 122, 32, 
	40, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 127, 32, 
	40, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 127, 32, 
	40, 297, 300, 553, 556, -128, 8, 9, 
	13, 14, 39, 42, 43, 45, 127, 0
]

class << self
	attr_accessor :_parser_single_lengths
	private :_parser_single_lengths, :_parser_single_lengths=
end
self._parser_single_lengths = [
	0, 3, 2, 2, 2, 2, 2, 1, 
	3, 4, 2, 2, 2, 1, 3, 1, 
	3, 2, 13, 11, 3, 2, 5, 14, 
	5, 1, 5, 5, 5, 5, 5, 5, 
	5, 5, 2, 5, 2, 2, 2, 2, 
	2, 2, 1, 3, 2, 2, 2, 3, 
	1, 4, 2, 3, 2, 2, 2, 2, 
	2, 3, 5, 10, 7, 7, 7, 7, 
	5, 7, 7, 5, 5, 5, 5, 3, 
	5, 8, 5, 5, 18, 6, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 6, 
	10, 7, 7, 7, 7, 7, 7, 6, 
	8, 7, 7, 6, 8, 6, 8, 6, 
	6, 15, 5, 5, 5, 5, 5, 5, 
	5, 5, 2, 5, 5, 5, 5, 5, 
	4, 8, 5, 5, 6, 7, 7, 7, 
	7, 7, 6, 10, 7, 7, 7, 7, 
	5, 7, 7, 18, 16, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 6, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	7, 10, 7, 7, 7, 7, 7, 7, 
	6, 8, 7, 7, 6, 8, 6, 8, 
	6, 6, 7, 7, 7, 7, 7, 6, 
	10, 10, 10, 10, 6, 5, 8, 5, 
	5, 6, 18, 16, 10, 6, 10, 10, 
	10, 10, 10, 10, 10, 10, 6, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	7, 10, 7, 7, 7, 7, 7, 7, 
	6, 8, 7, 7, 6, 8, 6, 8, 
	6, 6, 7, 7, 7, 7, 7, 6, 
	10, 7, 7, 7, 7, 5, 7, 7, 
	10, 10, 10, 10, 6, 10, 10, 10, 
	10, 10, 10, 10, 10, 7, 10, 10, 
	10, 10, 10, 7, 10, 10, 10, 10, 
	10, 10, 10, 10, 7, 10, 10, 10, 
	10, 10, 7, 7, 7, 7, 7, 6, 
	8, 5, 6, 7, 7, 7, 7, 7, 
	7, 7, 7, 8, 5, 6, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 1, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	1, 2, 2, 2, 2, 2, 2, 2, 
	1, 3, 2, 1, 14, 6, 6, 6
]

class << self
	attr_accessor :_parser_range_lengths
	private :_parser_range_lengths, :_parser_range_lengths=
end
self._parser_range_lengths = [
	0, 1, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 1, 3, 2, 
	4, 1, 3, 2, 4, 0, 3, 3, 
	4, 1, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 1, 0, 0, 0, 0, 
	0, 0, 1, 1, 0, 0, 1, 3, 
	2, 4, 1, 1, 0, 0, 0, 0, 
	0, 1, 3, 5, 3, 3, 3, 3, 
	3, 3, 3, 4, 4, 4, 4, 3, 
	3, 11, 3, 3, 9, 7, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 5, 
	5, 3, 3, 3, 3, 3, 3, 5, 
	5, 3, 3, 5, 9, 7, 11, 5, 
	5, 3, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 11, 3, 3, 5, 3, 3, 3, 
	3, 3, 5, 5, 3, 3, 3, 3, 
	3, 3, 3, 9, 7, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 9, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 5, 3, 3, 3, 3, 3, 3, 
	5, 5, 3, 3, 5, 9, 7, 11, 
	5, 5, 3, 3, 3, 3, 3, 5, 
	11, 11, 11, 11, 9, 3, 11, 3, 
	3, 5, 9, 7, 11, 5, 11, 11, 
	11, 11, 11, 11, 11, 11, 9, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 5, 3, 3, 3, 3, 3, 3, 
	5, 5, 3, 3, 5, 9, 7, 11, 
	5, 5, 3, 3, 3, 3, 3, 5, 
	5, 3, 3, 3, 3, 3, 3, 3, 
	11, 11, 11, 11, 9, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 3, 3, 3, 3, 9, 
	11, 3, 5, 3, 3, 3, 3, 3, 
	3, 3, 11, 11, 3, 5, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 3, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	1, 1, 0, 1, 3, 5, 5, 5
]

class << self
	attr_accessor :_parser_index_offsets
	private :_parser_index_offsets, :_parser_index_offsets=
end
self._parser_index_offsets = [
	0, 0, 5, 8, 11, 14, 17, 20, 
	23, 28, 33, 36, 39, 42, 45, 52, 
	56, 64, 68, 85, 99, 107, 110, 119, 
	137, 147, 150, 160, 170, 180, 190, 200, 
	210, 220, 230, 237, 244, 247, 250, 253, 
	256, 259, 262, 265, 270, 273, 276, 280, 
	287, 291, 300, 304, 309, 312, 315, 318, 
	321, 324, 329, 338, 354, 365, 376, 387, 
	398, 407, 418, 429, 439, 449, 459, 469, 
	476, 485, 505, 514, 523, 551, 565, 576, 
	587, 598, 609, 620, 631, 642, 653, 664, 
	676, 692, 703, 714, 725, 736, 747, 758, 
	770, 784, 795, 806, 818, 836, 850, 870, 
	882, 894, 913, 923, 933, 943, 953, 963, 
	973, 983, 993, 1000, 1010, 1020, 1030, 1040, 
	1050, 1059, 1079, 1088, 1097, 1109, 1120, 1131, 
	1142, 1153, 1164, 1176, 1192, 1203, 1214, 1225, 
	1236, 1245, 1256, 1267, 1295, 1319, 1341, 1363, 
	1385, 1407, 1429, 1451, 1473, 1495, 1517, 1533, 
	1555, 1577, 1599, 1621, 1643, 1665, 1687, 1709, 
	1731, 1753, 1775, 1797, 1819, 1841, 1863, 1885, 
	1907, 1929, 1951, 1973, 1995, 2017, 2039, 2061, 
	2083, 2102, 2118, 2129, 2140, 2151, 2162, 2173, 
	2184, 2196, 2210, 2221, 2232, 2244, 2262, 2276, 
	2296, 2308, 2320, 2331, 2342, 2353, 2364, 2375, 
	2387, 2409, 2431, 2453, 2475, 2491, 2500, 2520, 
	2529, 2538, 2550, 2578, 2602, 2624, 2636, 2658, 
	2680, 2702, 2724, 2746, 2768, 2790, 2812, 2828, 
	2850, 2872, 2894, 2916, 2938, 2960, 2982, 3004, 
	3026, 3048, 3070, 3092, 3114, 3136, 3158, 3180, 
	3202, 3224, 3246, 3268, 3290, 3312, 3334, 3356, 
	3378, 3397, 3413, 3424, 3435, 3446, 3457, 3468, 
	3479, 3491, 3505, 3516, 3527, 3539, 3557, 3571, 
	3591, 3603, 3615, 3626, 3637, 3648, 3659, 3670, 
	3682, 3698, 3709, 3720, 3731, 3742, 3751, 3762, 
	3773, 3795, 3817, 3839, 3861, 3877, 3899, 3921, 
	3943, 3965, 3987, 4009, 4031, 4053, 4072, 4094, 
	4116, 4138, 4160, 4182, 4201, 4223, 4245, 4267, 
	4289, 4311, 4333, 4355, 4377, 4396, 4418, 4440, 
	4462, 4484, 4506, 4525, 4536, 4547, 4558, 4569, 
	4585, 4605, 4614, 4626, 4637, 4648, 4659, 4670, 
	4681, 4692, 4703, 4722, 4742, 4751, 4763, 4773, 
	4783, 4793, 4803, 4813, 4823, 4833, 4843, 4853, 
	4858, 4868, 4878, 4888, 4898, 4908, 4918, 4928, 
	4938, 4948, 4958, 4968, 4978, 4988, 4998, 5008, 
	5018, 5021, 5024, 5027, 5030, 5033, 5036, 5039, 
	5042, 5045, 5050, 5053, 5056, 5074, 5086, 5098
]

class << self
	attr_accessor :_parser_indicies
	private :_parser_indicies, :_parser_indicies=
end
self._parser_indicies = [
	0, 2, 2, 0, 1, 3, 3, 1, 
	4, 4, 1, 5, 5, 1, 6, 6, 
	1, 7, 7, 1, 8, 8, 1, 8, 
	9, 9, 8, 1, 10, 11, 10, 11, 
	1, 12, 12, 1, 13, 13, 1, 14, 
	14, 1, 15, 15, 1, 15, 16, 16, 
	15, 17, 17, 1, 17, 17, 17, 1, 
	18, 19, 19, 18, 20, 20, 20, 1, 
	21, 22, 21, 1, 22, 23, 25, 26, 
	27, 28, 29, 23, 25, 26, 27, 28, 
	29, 22, 24, 24, 1, 30, 31, 32, 
	33, 34, 24, 30, 31, 32, 33, 34, 
	24, 24, 1, 35, 36, 36, 35, 37, 
	37, 37, 1, 39, 40, 38, 39, 40, 
	38, 41, 41, 38, 38, 38, 1, 42, 
	23, 43, 25, 26, 27, 28, 29, 23, 
	25, 26, 27, 28, 29, 42, 24, 24, 
	1, 35, 36, 44, 36, 44, 35, 37, 
	37, 37, 1, 35, 35, 1, 35, 36, 
	45, 36, 45, 35, 37, 37, 37, 1, 
	35, 36, 46, 36, 46, 35, 37, 37, 
	37, 1, 35, 36, 47, 36, 47, 35, 
	37, 37, 37, 1, 35, 36, 48, 36, 
	48, 35, 37, 37, 37, 1, 35, 36, 
	49, 36, 49, 35, 37, 37, 37, 1, 
	35, 36, 50, 36, 50, 35, 37, 37, 
	37, 1, 35, 36, 51, 36, 51, 35, 
	37, 37, 37, 1, 35, 36, 52, 36, 
	52, 35, 37, 37, 37, 1, 53, 37, 
	53, 37, 37, 37, 1, 53, 54, 55, 
	54, 55, 53, 1, 56, 56, 1, 57, 
	57, 1, 58, 58, 1, 59, 59, 1, 
	60, 60, 1, 61, 61, 1, 62, 62, 
	1, 62, 63, 63, 62, 1, 64, 64, 
	1, 65, 65, 1, 65, 66, 65, 1, 
	66, 67, 67, 66, 68, 68, 1, 68, 
	68, 68, 1, 69, 69, 70, 69, 69, 
	71, 71, 71, 1, 72, 73, 72, 1, 
	73, 42, 42, 73, 1, 74, 74, 1, 
	75, 75, 1, 76, 76, 1, 77, 77, 
	1, 78, 78, 1, 80, 81, 82, 80, 
	79, 84, 85, 83, 86, 86, 83, 83, 
	83, 1, 87, 84, 88, 89, 88, 89, 
	85, 83, 86, 86, 83, 87, 83, 83, 
	83, 1, 84, 90, 90, 85, 83, 86, 
	86, 83, 83, 83, 1, 84, 91, 91, 
	85, 83, 86, 86, 83, 83, 83, 1, 
	84, 92, 92, 85, 83, 86, 86, 83, 
	83, 83, 1, 84, 93, 93, 85, 83, 
	86, 86, 83, 83, 83, 1, 81, 82, 
	79, 86, 86, 79, 79, 79, 1, 84, 
	94, 94, 85, 83, 86, 86, 83, 83, 
	83, 1, 84, 93, 93, 85, 83, 86, 
	86, 83, 83, 83, 1, 35, 36, 95, 
	36, 95, 35, 37, 37, 37, 1, 35, 
	36, 96, 36, 96, 35, 37, 37, 37, 
	1, 35, 36, 97, 36, 97, 35, 37, 
	37, 37, 1, 35, 36, 98, 36, 98, 
	35, 37, 37, 37, 1, 100, 101, 102, 
	102, 102, 102, 99, 104, 105, 103, 106, 
	106, 103, 103, 103, 1, 107, 108, 104, 
	108, 105, 103, 106, 106, 103, 107, 103, 
	103, 103, 109, 103, 109, 103, 109, 103, 
	1, 111, 112, 110, 113, 114, 110, 110, 
	110, 1, 111, 112, 110, 115, 115, 110, 
	110, 110, 1, 116, 117, 39, 119, 120, 
	121, 122, 123, 117, 119, 120, 121, 122, 
	123, 124, 38, 125, 41, 38, 116, 38, 
	38, 38, 118, 38, 118, 38, 1, 39, 
	118, 40, 38, 41, 41, 38, 38, 38, 
	118, 38, 118, 38, 1, 39, 126, 126, 
	40, 38, 41, 41, 38, 38, 38, 1, 
	39, 127, 127, 40, 38, 41, 41, 38, 
	38, 38, 1, 39, 128, 128, 40, 38, 
	41, 41, 38, 38, 38, 1, 39, 129, 
	129, 40, 38, 41, 41, 38, 38, 38, 
	1, 39, 130, 130, 40, 38, 41, 41, 
	38, 38, 38, 1, 39, 131, 131, 40, 
	38, 41, 41, 38, 38, 38, 1, 39, 
	132, 132, 40, 38, 41, 41, 38, 38, 
	38, 1, 39, 133, 133, 40, 38, 41, 
	41, 38, 38, 38, 1, 39, 134, 134, 
	40, 38, 41, 41, 38, 38, 38, 1, 
	135, 39, 40, 38, 41, 41, 38, 135, 
	38, 38, 38, 1, 135, 39, 136, 137, 
	136, 137, 40, 38, 41, 41, 38, 135, 
	38, 38, 38, 1, 39, 138, 138, 40, 
	38, 41, 41, 38, 38, 38, 1, 39, 
	139, 139, 40, 38, 41, 41, 38, 38, 
	38, 1, 39, 140, 140, 40, 38, 41, 
	41, 38, 38, 38, 1, 39, 141, 141, 
	40, 38, 41, 41, 38, 38, 38, 1, 
	39, 142, 142, 40, 38, 41, 41, 38, 
	38, 38, 1, 39, 143, 143, 40, 38, 
	41, 41, 38, 38, 38, 1, 144, 39, 
	40, 38, 41, 41, 38, 144, 38, 38, 
	38, 1, 144, 39, 145, 145, 40, 38, 
	41, 41, 38, 144, 38, 38, 38, 1, 
	39, 146, 146, 40, 38, 41, 41, 38, 
	38, 38, 1, 39, 147, 147, 40, 38, 
	41, 41, 38, 38, 38, 1, 147, 148, 
	40, 38, 41, 41, 38, 147, 38, 38, 
	38, 1, 149, 150, 39, 150, 40, 38, 
	41, 41, 38, 149, 38, 38, 38, 151, 
	38, 151, 38, 1, 39, 151, 40, 38, 
	41, 41, 38, 38, 38, 151, 38, 151, 
	38, 1, 152, 152, 39, 152, 154, 38, 
	155, 41, 38, 152, 38, 38, 38, 153, 
	38, 153, 38, 153, 38, 1, 156, 39, 
	157, 38, 158, 41, 38, 156, 38, 38, 
	38, 1, 159, 39, 160, 116, 41, 41, 
	38, 159, 38, 38, 38, 1, 161, 23, 
	162, 42, 25, 26, 27, 28, 29, 23, 
	25, 26, 27, 28, 29, 161, 24, 24, 
	1, 35, 36, 163, 36, 163, 35, 37, 
	37, 37, 1, 35, 36, 98, 36, 98, 
	35, 37, 37, 37, 1, 35, 36, 164, 
	36, 164, 35, 37, 37, 37, 1, 35, 
	36, 165, 36, 165, 35, 37, 37, 37, 
	1, 35, 36, 166, 36, 166, 35, 37, 
	37, 37, 1, 35, 36, 167, 36, 167, 
	35, 37, 37, 37, 1, 35, 36, 168, 
	36, 168, 35, 37, 37, 37, 1, 35, 
	36, 169, 36, 169, 35, 37, 37, 37, 
	1, 62, 37, 62, 37, 37, 37, 1, 
	35, 36, 170, 36, 170, 35, 37, 37, 
	37, 1, 35, 36, 171, 36, 171, 35, 
	37, 37, 37, 1, 35, 36, 172, 36, 
	172, 35, 37, 37, 37, 1, 35, 36, 
	173, 36, 173, 35, 37, 37, 37, 1, 
	35, 36, 174, 36, 174, 35, 37, 37, 
	37, 1, 80, 81, 82, 175, 80, 175, 
	175, 175, 79, 176, 177, 84, 177, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 180, 
	181, 179, 182, 183, 179, 179, 179, 1, 
	180, 181, 179, 184, 184, 179, 179, 179, 
	1, 176, 84, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 1, 39, 185, 185, 
	40, 38, 41, 41, 38, 38, 38, 1, 
	39, 186, 186, 40, 38, 41, 41, 38, 
	38, 38, 1, 39, 187, 187, 40, 38, 
	41, 41, 38, 38, 38, 1, 39, 188, 
	188, 40, 38, 41, 41, 38, 38, 38, 
	1, 39, 189, 189, 40, 38, 41, 41, 
	38, 38, 38, 1, 191, 192, 193, 190, 
	194, 195, 190, 191, 190, 190, 190, 1, 
	196, 180, 197, 198, 197, 198, 181, 179, 
	184, 184, 179, 196, 179, 179, 179, 1, 
	180, 199, 199, 181, 179, 184, 184, 179, 
	179, 179, 1, 180, 200, 200, 181, 179, 
	184, 184, 179, 179, 179, 1, 180, 201, 
	201, 181, 179, 184, 184, 179, 179, 179, 
	1, 180, 202, 202, 181, 179, 184, 184, 
	179, 179, 179, 1, 192, 193, 190, 184, 
	184, 190, 190, 190, 1, 180, 203, 203, 
	181, 179, 184, 184, 179, 179, 179, 1, 
	180, 202, 202, 181, 179, 184, 184, 179, 
	179, 179, 1, 204, 205, 84, 207, 208, 
	209, 210, 211, 205, 207, 208, 209, 210, 
	211, 212, 83, 213, 86, 83, 204, 83, 
	83, 83, 206, 83, 206, 83, 1, 84, 
	214, 215, 216, 217, 218, 206, 214, 215, 
	216, 217, 218, 85, 83, 86, 86, 83, 
	83, 83, 206, 83, 206, 83, 1, 176, 
	177, 84, 219, 177, 219, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	220, 177, 220, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 221, 177, 
	221, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 222, 177, 222, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 223, 177, 223, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	224, 177, 224, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 225, 177, 
	225, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 226, 177, 226, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 227, 177, 227, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 84, 178, 85, 
	83, 86, 86, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	228, 177, 228, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 229, 177, 
	229, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 230, 177, 230, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 227, 177, 227, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	231, 177, 231, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 227, 177, 
	227, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 232, 177, 232, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 233, 177, 233, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	234, 177, 234, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 235, 177, 
	235, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 231, 177, 231, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 236, 177, 236, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	237, 177, 237, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 238, 177, 
	238, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 239, 177, 239, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 227, 177, 227, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	240, 177, 240, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 241, 177, 
	241, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 242, 177, 242, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 243, 177, 243, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	244, 177, 244, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 245, 177, 
	245, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 246, 177, 246, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 247, 177, 247, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	248, 177, 248, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 249, 84, 178, 85, 83, 
	86, 86, 83, 249, 83, 83, 83, 178, 
	83, 178, 83, 178, 83, 1, 249, 84, 
	250, 251, 250, 251, 85, 83, 86, 86, 
	83, 249, 83, 83, 83, 1, 84, 252, 
	252, 85, 83, 86, 86, 83, 83, 83, 
	1, 84, 253, 253, 85, 83, 86, 86, 
	83, 83, 83, 1, 84, 254, 254, 85, 
	83, 86, 86, 83, 83, 83, 1, 84, 
	255, 255, 85, 83, 86, 86, 83, 83, 
	83, 1, 84, 256, 256, 85, 83, 86, 
	86, 83, 83, 83, 1, 84, 257, 257, 
	85, 83, 86, 86, 83, 83, 83, 1, 
	258, 84, 85, 83, 86, 86, 83, 258, 
	83, 83, 83, 1, 258, 84, 259, 259, 
	85, 83, 86, 86, 83, 258, 83, 83, 
	83, 1, 84, 260, 260, 85, 83, 86, 
	86, 83, 83, 83, 1, 84, 261, 261, 
	85, 83, 86, 86, 83, 83, 83, 1, 
	261, 262, 85, 83, 86, 86, 83, 261, 
	83, 83, 83, 1, 263, 264, 84, 264, 
	85, 83, 86, 86, 83, 263, 83, 83, 
	83, 265, 83, 265, 83, 1, 84, 265, 
	85, 83, 86, 86, 83, 83, 83, 265, 
	83, 265, 83, 1, 266, 266, 84, 266, 
	268, 83, 269, 86, 83, 266, 83, 83, 
	83, 267, 83, 267, 83, 267, 83, 1, 
	270, 84, 271, 83, 272, 86, 83, 270, 
	83, 83, 83, 1, 273, 84, 274, 204, 
	86, 86, 83, 273, 83, 83, 83, 1, 
	84, 275, 275, 85, 83, 86, 86, 83, 
	83, 83, 1, 84, 276, 276, 85, 83, 
	86, 86, 83, 83, 83, 1, 84, 277, 
	277, 85, 83, 86, 86, 83, 83, 83, 
	1, 84, 278, 278, 85, 83, 86, 86, 
	83, 83, 83, 1, 84, 279, 279, 85, 
	83, 86, 86, 83, 83, 83, 1, 80, 
	81, 82, 79, 86, 86, 79, 80, 79, 
	79, 79, 1, 176, 177, 84, 280, 177, 
	280, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 281, 177, 281, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 282, 177, 282, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	283, 177, 283, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 285, 286, 287, 284, 288, 
	289, 284, 284, 284, 286, 284, 286, 284, 
	286, 284, 1, 291, 292, 290, 293, 293, 
	290, 290, 290, 1, 294, 295, 291, 295, 
	292, 290, 293, 293, 290, 294, 290, 290, 
	290, 296, 290, 296, 290, 296, 290, 1, 
	298, 299, 297, 300, 301, 297, 297, 297, 
	1, 298, 299, 297, 302, 302, 297, 297, 
	297, 1, 294, 291, 292, 290, 293, 293, 
	290, 294, 290, 290, 290, 1, 303, 304, 
	104, 306, 307, 308, 309, 310, 304, 306, 
	307, 308, 309, 310, 311, 103, 312, 106, 
	103, 303, 103, 103, 103, 305, 103, 305, 
	103, 1, 104, 313, 314, 315, 316, 317, 
	305, 313, 314, 315, 316, 317, 105, 103, 
	106, 106, 103, 103, 103, 305, 103, 305, 
	103, 1, 107, 108, 104, 318, 108, 318, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 104, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 1, 107, 108, 104, 319, 
	108, 319, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 107, 108, 104, 320, 108, 320, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 321, 108, 321, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 107, 108, 
	104, 322, 108, 322, 105, 103, 106, 106, 
	103, 107, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 107, 108, 104, 323, 
	108, 323, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 107, 108, 104, 324, 108, 324, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 325, 108, 325, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 107, 108, 
	104, 326, 108, 326, 105, 103, 106, 106, 
	103, 107, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 104, 109, 105, 103, 
	106, 106, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 107, 108, 104, 327, 
	108, 327, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 107, 108, 104, 328, 108, 328, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 329, 108, 329, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 107, 108, 
	104, 326, 108, 326, 105, 103, 106, 106, 
	103, 107, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 107, 108, 104, 330, 
	108, 330, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 107, 108, 104, 326, 108, 326, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 331, 108, 331, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 107, 108, 
	104, 332, 108, 332, 105, 103, 106, 106, 
	103, 107, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 107, 108, 104, 333, 
	108, 333, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 107, 108, 104, 334, 108, 334, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 330, 108, 330, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 107, 108, 
	104, 335, 108, 335, 105, 103, 106, 106, 
	103, 107, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 107, 108, 104, 336, 
	108, 336, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 107, 108, 104, 337, 108, 337, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 338, 108, 338, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 107, 108, 
	104, 326, 108, 326, 105, 103, 106, 106, 
	103, 107, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 107, 108, 104, 339, 
	108, 339, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 107, 108, 104, 340, 108, 340, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 341, 108, 341, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 107, 108, 
	104, 342, 108, 342, 105, 103, 106, 106, 
	103, 107, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 107, 108, 104, 343, 
	108, 343, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 107, 108, 104, 344, 108, 344, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 345, 108, 345, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 107, 108, 
	104, 346, 108, 346, 105, 103, 106, 106, 
	103, 107, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 107, 108, 104, 347, 
	108, 347, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 348, 104, 109, 105, 103, 106, 
	106, 103, 348, 103, 103, 103, 109, 103, 
	109, 103, 109, 103, 1, 348, 104, 349, 
	350, 349, 350, 105, 103, 106, 106, 103, 
	348, 103, 103, 103, 1, 104, 351, 351, 
	105, 103, 106, 106, 103, 103, 103, 1, 
	104, 352, 352, 105, 103, 106, 106, 103, 
	103, 103, 1, 104, 353, 353, 105, 103, 
	106, 106, 103, 103, 103, 1, 104, 354, 
	354, 105, 103, 106, 106, 103, 103, 103, 
	1, 104, 355, 355, 105, 103, 106, 106, 
	103, 103, 103, 1, 104, 356, 356, 105, 
	103, 106, 106, 103, 103, 103, 1, 357, 
	104, 105, 103, 106, 106, 103, 357, 103, 
	103, 103, 1, 357, 104, 358, 358, 105, 
	103, 106, 106, 103, 357, 103, 103, 103, 
	1, 104, 359, 359, 105, 103, 106, 106, 
	103, 103, 103, 1, 104, 360, 360, 105, 
	103, 106, 106, 103, 103, 103, 1, 360, 
	361, 105, 103, 106, 106, 103, 360, 103, 
	103, 103, 1, 362, 363, 104, 363, 105, 
	103, 106, 106, 103, 362, 103, 103, 103, 
	364, 103, 364, 103, 1, 104, 364, 105, 
	103, 106, 106, 103, 103, 103, 364, 103, 
	364, 103, 1, 365, 365, 104, 365, 367, 
	103, 368, 106, 103, 365, 103, 103, 103, 
	366, 103, 366, 103, 366, 103, 1, 369, 
	104, 370, 103, 371, 106, 103, 369, 103, 
	103, 103, 1, 372, 104, 373, 303, 106, 
	106, 103, 372, 103, 103, 103, 1, 104, 
	374, 374, 105, 103, 106, 106, 103, 103, 
	103, 1, 104, 375, 375, 105, 103, 106, 
	106, 103, 103, 103, 1, 104, 376, 376, 
	105, 103, 106, 106, 103, 103, 103, 1, 
	104, 377, 377, 105, 103, 106, 106, 103, 
	103, 103, 1, 104, 378, 378, 105, 103, 
	106, 106, 103, 103, 103, 1, 380, 381, 
	382, 379, 383, 384, 379, 380, 379, 379, 
	379, 1, 385, 291, 386, 387, 386, 387, 
	292, 290, 293, 293, 290, 385, 290, 290, 
	290, 1, 291, 388, 388, 292, 290, 293, 
	293, 290, 290, 290, 1, 291, 389, 389, 
	292, 290, 293, 293, 290, 290, 290, 1, 
	291, 390, 390, 292, 290, 293, 293, 290, 
	290, 290, 1, 291, 391, 391, 292, 290, 
	293, 293, 290, 290, 290, 1, 381, 382, 
	379, 293, 293, 379, 379, 379, 1, 291, 
	392, 392, 292, 290, 293, 293, 290, 290, 
	290, 1, 291, 391, 391, 292, 290, 293, 
	293, 290, 290, 290, 1, 107, 108, 104, 
	393, 108, 393, 105, 103, 106, 106, 103, 
	107, 103, 103, 103, 109, 103, 109, 103, 
	109, 103, 1, 107, 108, 104, 394, 108, 
	394, 105, 103, 106, 106, 103, 107, 103, 
	103, 103, 109, 103, 109, 103, 109, 103, 
	1, 107, 108, 104, 395, 108, 395, 105, 
	103, 106, 106, 103, 107, 103, 103, 103, 
	109, 103, 109, 103, 109, 103, 1, 107, 
	108, 104, 396, 108, 396, 105, 103, 106, 
	106, 103, 107, 103, 103, 103, 109, 103, 
	109, 103, 109, 103, 1, 100, 102, 101, 
	99, 106, 106, 99, 99, 99, 102, 99, 
	102, 99, 102, 99, 1, 107, 108, 104, 
	397, 108, 397, 105, 103, 106, 106, 103, 
	107, 103, 103, 103, 109, 103, 109, 103, 
	109, 103, 1, 107, 108, 104, 396, 108, 
	396, 105, 103, 106, 106, 103, 107, 103, 
	103, 103, 109, 103, 109, 103, 109, 103, 
	1, 107, 108, 104, 398, 108, 398, 105, 
	103, 106, 106, 103, 107, 103, 103, 103, 
	109, 103, 109, 103, 109, 103, 1, 107, 
	108, 104, 399, 108, 399, 105, 103, 106, 
	106, 103, 107, 103, 103, 103, 109, 103, 
	109, 103, 109, 103, 1, 107, 108, 104, 
	400, 108, 400, 105, 103, 106, 106, 103, 
	107, 103, 103, 103, 109, 103, 109, 103, 
	109, 103, 1, 107, 108, 104, 401, 108, 
	401, 105, 103, 106, 106, 103, 107, 103, 
	103, 103, 109, 103, 109, 103, 109, 103, 
	1, 107, 108, 104, 402, 108, 402, 105, 
	103, 106, 106, 103, 107, 103, 103, 103, 
	109, 103, 109, 103, 109, 103, 1, 107, 
	108, 104, 403, 108, 403, 105, 103, 106, 
	106, 103, 107, 103, 103, 103, 109, 103, 
	109, 103, 109, 103, 1, 357, 104, 109, 
	105, 103, 106, 106, 103, 357, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 404, 108, 404, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 107, 108, 
	104, 405, 108, 405, 105, 103, 106, 106, 
	103, 107, 103, 103, 103, 109, 103, 109, 
	103, 109, 103, 1, 107, 108, 104, 406, 
	108, 406, 105, 103, 106, 106, 103, 107, 
	103, 103, 103, 109, 103, 109, 103, 109, 
	103, 1, 107, 108, 104, 407, 108, 407, 
	105, 103, 106, 106, 103, 107, 103, 103, 
	103, 109, 103, 109, 103, 109, 103, 1, 
	107, 108, 104, 408, 108, 408, 105, 103, 
	106, 106, 103, 107, 103, 103, 103, 109, 
	103, 109, 103, 109, 103, 1, 380, 381, 
	409, 382, 379, 383, 384, 379, 380, 379, 
	379, 379, 409, 379, 409, 379, 409, 379, 
	1, 176, 177, 84, 410, 177, 410, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 283, 177, 283, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	411, 177, 411, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 412, 177, 
	412, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 176, 177, 84, 413, 177, 413, 85, 
	83, 86, 86, 83, 176, 83, 83, 83, 
	178, 83, 178, 83, 178, 83, 1, 176, 
	177, 84, 414, 177, 414, 85, 83, 86, 
	86, 83, 176, 83, 83, 83, 178, 83, 
	178, 83, 178, 83, 1, 176, 177, 84, 
	415, 177, 415, 85, 83, 86, 86, 83, 
	176, 83, 83, 83, 178, 83, 178, 83, 
	178, 83, 1, 176, 177, 84, 416, 177, 
	416, 85, 83, 86, 86, 83, 176, 83, 
	83, 83, 178, 83, 178, 83, 178, 83, 
	1, 258, 84, 178, 85, 83, 86, 86, 
	83, 258, 83, 83, 83, 178, 83, 178, 
	83, 178, 83, 1, 176, 177, 84, 417, 
	177, 417, 85, 83, 86, 86, 83, 176, 
	83, 83, 83, 178, 83, 178, 83, 178, 
	83, 1, 176, 177, 84, 418, 177, 418, 
	85, 83, 86, 86, 83, 176, 83, 83, 
	83, 178, 83, 178, 83, 178, 83, 1, 
	176, 177, 84, 419, 177, 419, 85, 83, 
	86, 86, 83, 176, 83, 83, 83, 178, 
	83, 178, 83, 178, 83, 1, 176, 177, 
	84, 420, 177, 420, 85, 83, 86, 86, 
	83, 176, 83, 83, 83, 178, 83, 178, 
	83, 178, 83, 1, 176, 177, 84, 421, 
	177, 421, 85, 83, 86, 86, 83, 176, 
	83, 83, 83, 178, 83, 178, 83, 178, 
	83, 1, 80, 81, 175, 82, 79, 86, 
	86, 79, 80, 79, 79, 79, 175, 79, 
	175, 79, 175, 79, 1, 39, 422, 422, 
	40, 38, 41, 41, 38, 38, 38, 1, 
	39, 423, 423, 40, 38, 41, 41, 38, 
	38, 38, 1, 39, 424, 424, 40, 38, 
	41, 41, 38, 38, 38, 1, 39, 425, 
	425, 40, 38, 41, 41, 38, 38, 38, 
	1, 427, 428, 429, 426, 430, 431, 426, 
	426, 426, 428, 426, 428, 426, 428, 426, 
	1, 432, 433, 111, 433, 112, 110, 115, 
	115, 110, 432, 110, 110, 110, 434, 110, 
	434, 110, 434, 110, 1, 111, 112, 110, 
	41, 41, 110, 110, 110, 1, 432, 111, 
	112, 110, 115, 115, 110, 432, 110, 110, 
	110, 1, 39, 435, 435, 40, 38, 41, 
	41, 38, 38, 38, 1, 39, 425, 425, 
	40, 38, 41, 41, 38, 38, 38, 1, 
	39, 436, 436, 40, 38, 41, 41, 38, 
	38, 38, 1, 39, 437, 437, 40, 38, 
	41, 41, 38, 38, 38, 1, 39, 438, 
	438, 40, 38, 41, 41, 38, 38, 38, 
	1, 39, 439, 439, 40, 38, 41, 41, 
	38, 38, 38, 1, 39, 440, 440, 40, 
	38, 41, 41, 38, 38, 38, 1, 191, 
	192, 441, 193, 190, 194, 195, 190, 191, 
	190, 190, 190, 441, 190, 441, 190, 441, 
	190, 1, 442, 443, 180, 443, 181, 179, 
	184, 184, 179, 442, 179, 179, 179, 444, 
	179, 444, 179, 444, 179, 1, 180, 181, 
	179, 41, 41, 179, 179, 179, 1, 442, 
	180, 181, 179, 184, 184, 179, 442, 179, 
	179, 179, 1, 35, 36, 445, 36, 445, 
	35, 37, 37, 37, 1, 35, 36, 446, 
	36, 446, 35, 37, 37, 37, 1, 35, 
	36, 447, 36, 447, 35, 37, 37, 37, 
	1, 35, 36, 448, 36, 448, 35, 37, 
	37, 37, 1, 35, 36, 449, 36, 449, 
	35, 37, 37, 37, 1, 35, 36, 450, 
	36, 450, 35, 37, 37, 37, 1, 35, 
	36, 451, 36, 451, 35, 37, 37, 37, 
	1, 35, 36, 452, 36, 452, 35, 37, 
	37, 37, 1, 35, 36, 453, 36, 453, 
	35, 37, 37, 37, 1, 37, 37, 37, 
	37, 1, 35, 36, 454, 36, 454, 35, 
	37, 37, 37, 1, 35, 36, 455, 36, 
	455, 35, 37, 37, 37, 1, 35, 36, 
	456, 36, 456, 35, 37, 37, 37, 1, 
	35, 36, 453, 36, 453, 35, 37, 37, 
	37, 1, 35, 36, 457, 36, 457, 35, 
	37, 37, 37, 1, 35, 36, 453, 36, 
	453, 35, 37, 37, 37, 1, 35, 36, 
	458, 36, 458, 35, 37, 37, 37, 1, 
	35, 36, 459, 36, 459, 35, 37, 37, 
	37, 1, 35, 36, 460, 36, 460, 35, 
	37, 37, 37, 1, 35, 36, 461, 36, 
	461, 35, 37, 37, 37, 1, 35, 36, 
	457, 36, 457, 35, 37, 37, 37, 1, 
	35, 36, 462, 36, 462, 35, 37, 37, 
	37, 1, 35, 36, 463, 36, 463, 35, 
	37, 37, 37, 1, 35, 36, 464, 36, 
	464, 35, 37, 37, 37, 1, 35, 36, 
	465, 36, 465, 35, 37, 37, 37, 1, 
	35, 36, 453, 36, 453, 35, 37, 37, 
	37, 1, 21, 21, 1, 466, 466, 1, 
	467, 467, 1, 468, 468, 1, 469, 469, 
	1, 470, 470, 1, 471, 471, 1, 472, 
	472, 1, 473, 473, 1, 473, 474, 474, 
	473, 1, 10, 10, 1, 43, 43, 1, 
	162, 23, 43, 25, 26, 27, 28, 29, 
	23, 25, 26, 27, 28, 29, 162, 24, 
	24, 1, 475, 104, 105, 103, 106, 106, 
	103, 475, 103, 103, 103, 1, 476, 84, 
	85, 83, 86, 86, 83, 476, 83, 83, 
	83, 1, 477, 39, 40, 38, 41, 41, 
	38, 477, 38, 38, 38, 1, 0
]

class << self
	attr_accessor :_parser_trans_targs
	private :_parser_trans_targs, :_parser_trans_targs=
end
self._parser_trans_targs = [
	1, 0, 2, 3, 4, 5, 6, 7, 
	8, 9, 10, 361, 11, 12, 13, 14, 
	15, 16, 17, 360, 16, 17, 18, 19, 
	20, 24, 67, 106, 108, 115, 334, 344, 
	348, 350, 355, 21, 25, 20, 22, 22, 
	22, 23, 23, 371, 26, 27, 28, 29, 
	30, 31, 32, 33, 34, 35, 36, 52, 
	37, 38, 39, 40, 41, 42, 43, 44, 
	45, 46, 47, 48, 49, 50, 51, 49, 
	50, 51, 53, 54, 55, 56, 57, 58, 
	59, 58, 58, 58, 58, 58, 23, 59, 
	60, 65, 61, 62, 63, 64, 66, 68, 
	69, 70, 71, 72, 72, 72, 73, 72, 
	72, 72, 23, 74, 213, 73, 75, 75, 
	75, 76, 76, 23, 76, 77, 22, 78, 
	315, 323, 89, 325, 375, 372, 79, 80, 
	81, 82, 83, 84, 85, 86, 87, 88, 
	89, 125, 90, 91, 92, 93, 94, 95, 
	96, 97, 98, 99, 100, 100, 101, 102, 
	103, 102, 104, 105, 103, 104, 105, 104, 
	76, 105, 372, 107, 109, 110, 111, 112, 
	113, 114, 116, 117, 118, 119, 120, 121, 
	122, 124, 121, 123, 123, 123, 76, 76, 
	23, 126, 127, 128, 129, 130, 123, 131, 
	123, 123, 139, 139, 131, 132, 137, 133, 
	134, 135, 136, 138, 139, 140, 121, 167, 
	200, 300, 302, 309, 374, 372, 141, 151, 
	155, 157, 162, 142, 143, 144, 145, 146, 
	147, 148, 149, 150, 152, 153, 154, 156, 
	158, 159, 160, 161, 163, 164, 165, 166, 
	168, 169, 170, 171, 172, 173, 174, 175, 
	176, 177, 178, 194, 179, 180, 181, 182, 
	183, 184, 185, 186, 187, 188, 189, 189, 
	190, 191, 192, 191, 193, 105, 192, 193, 
	105, 193, 139, 195, 196, 197, 198, 199, 
	201, 202, 203, 204, 205, 205, 206, 205, 
	210, 210, 205, 205, 205, 23, 207, 209, 
	206, 208, 208, 208, 76, 76, 23, 210, 
	211, 73, 239, 280, 285, 287, 294, 373, 
	372, 212, 223, 227, 229, 234, 214, 215, 
	216, 217, 218, 219, 220, 221, 222, 224, 
	225, 226, 228, 230, 231, 232, 233, 235, 
	236, 237, 238, 240, 241, 242, 243, 244, 
	245, 246, 247, 248, 249, 250, 266, 251, 
	252, 253, 254, 255, 256, 257, 258, 259, 
	260, 261, 261, 262, 263, 264, 263, 265, 
	105, 264, 265, 105, 265, 210, 267, 268, 
	269, 270, 271, 205, 272, 205, 205, 139, 
	139, 272, 273, 278, 274, 275, 276, 277, 
	279, 281, 282, 283, 284, 286, 288, 289, 
	290, 291, 292, 293, 295, 296, 297, 298, 
	299, 206, 301, 303, 304, 305, 306, 307, 
	308, 310, 311, 312, 313, 314, 316, 317, 
	318, 319, 75, 75, 320, 75, 210, 210, 
	321, 322, 320, 324, 326, 327, 328, 329, 
	330, 331, 332, 333, 331, 335, 336, 337, 
	338, 339, 340, 341, 342, 343, 345, 346, 
	347, 349, 351, 352, 353, 354, 356, 357, 
	358, 359, 362, 363, 364, 365, 366, 367, 
	368, 369, 370, 373, 374, 375
]

class << self
	attr_accessor :_parser_trans_actions
	private :_parser_trans_actions, :_parser_trans_actions=
end
self._parser_trans_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 5, 7, 7, 0, 0, 0, 0, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 0, 0, 0, 0, 1, 
	3, 11, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 13, 15, 15, 0, 
	0, 0, 0, 0, 0, 0, 0, 17, 
	17, 72, 75, 0, 1, 3, 19, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 21, 87, 90, 21, 0, 
	1, 3, 23, 0, 0, 0, 0, 1, 
	3, 45, 23, 60, 0, 0, 9, 9, 
	9, 9, 9, 9, 3, 11, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 0, 0, 13, 
	15, 0, 33, 48, 0, 3, 11, 0, 
	3, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 17, 
	0, 0, 0, 0, 1, 3, 39, 19, 
	54, 0, 0, 0, 0, 0, 17, 17, 
	27, 36, 97, 51, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 9, 9, 
	9, 9, 9, 9, 3, 19, 9, 9, 
	9, 9, 9, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 13, 15, 0, 63, 66, 0, 3, 
	19, 0, 3, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 21, 30, 21, 42, 
	113, 81, 0, 1, 3, 84, 0, 0, 
	0, 0, 1, 3, 93, 84, 101, 0, 
	0, 9, 9, 9, 9, 9, 9, 3, 
	23, 9, 9, 9, 9, 9, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 0, 0, 13, 15, 0, 63, 
	69, 0, 3, 23, 0, 3, 0, 0, 
	0, 0, 0, 17, 17, 72, 75, 109, 
	78, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 17, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 21, 30, 21, 42, 105, 57, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 17, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 25, 0, 0, 0, 0
]

class << self
	attr_accessor :parser_start
end
self.parser_start = 1;
class << self
	attr_accessor :parser_first_final
end
self.parser_first_final = 371;
class << self
	attr_accessor :parser_error
end
self.parser_error = 0;

class << self
	attr_accessor :parser_en_main
end
self.parser_en_main = 1;


# line 171 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
    # % (this fixes syntax highlighting)
    parens = 0
    p = item = 0
    pe = eof = data.length
    
# line 2368 "/Users/seamusabshere/code/create_table/lib/create_table.rl.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = parser_start
end

# line 176 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
    # % (this fixes syntax highlighting)
    
# line 2378 "/Users/seamusabshere/code/create_table/lib/create_table.rl.rb"
begin
	_klen, _trans, _keys, _widec, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_widec = data[p].ord
	_keys = _parser_cond_offsets[cs]*2
	_klen = _parser_cond_lengths[cs]
	if _klen > 0
		_lower = _keys
		_upper = _keys + (_klen<<1) - 2
		loop do
			break if _upper < _lower
			_mid = _lower + (((_upper-_lower) >> 1) & ~1)
			if _widec < _parser_cond_keys[_mid]
				_upper = _mid - 2
			elsif _widec > _parser_cond_keys[_mid+1]
				_lower = _mid + 2
			else
				case _parser_cond_spaces[_parser_cond_offsets[cs] + ((_mid - _keys)>>1)]
	when 0 then	_widec = 128+ (data[p].ord - -128)
	_widec += 256 if ( 
# line 33 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
 parens == 0  )
				end # case
			end
		end # loop
	end
	_keys = _parser_key_offsets[cs]
	_trans = _parser_index_offsets[cs]
	_klen = _parser_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if _widec < _parser_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif _widec > _parser_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _parser_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if _widec < _parser_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif _widec > _parser_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _parser_indicies[_trans]
	cs = _parser_trans_targs[_trans]
	if _parser_trans_actions[_trans] != 0
		_acts = _parser_trans_actions[_trans]
		_nacts = _parser_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _parser_actions[_acts - 1]
when 0 then
# line 8 "/Users/seamusabshere/code/create_table/lib/create_table/common.rl"
		begin
parens+=1		end
when 1 then
# line 8 "/Users/seamusabshere/code/create_table/lib/create_table/common.rl"
		begin
parens-=1		end
when 2 then
# line 17 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 start_table_name = p                                  		end
when 3 then
# line 18 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 self.table_name = read(data, start_table_name, p)     		end
when 4 then
# line 20 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 start_column = p                                      		end
when 5 then
# line 21 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 parse_column read(data, start_column, p)              		end
when 6 then
# line 23 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 start_primary_key = p                                 		end
when 7 then
# line 24 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 self.primary_key = read(data, start_primary_key, p)   		end
when 8 then
# line 26 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 start_unique = p                                      		end
when 9 then
# line 27 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 parse_unique read(data, start_unique, p)              		end
when 10 then
# line 29 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 start_index = p                                       		end
when 11 then
# line 30 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
 parse_index read(data, start_index, p)                		end
when 12 then
# line 35 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
		begin
@temporary=true		end
# line 2534 "/Users/seamusabshere/code/create_table/lib/create_table.rl.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 178 "/Users/seamusabshere/code/create_table/lib/create_table.rl.tmp"
    # % (this fixes syntax highlighting)
    self
  end
end
