
# line 1 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
# MAKE SURE YOU'RE EDITING THE .RL FILE !!!

=begin

# line 70 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"

=end

class CreateTable
  class Column
    BLANK_STRING = ''

    include Parser

    attr_reader :parent
    attr_reader :name
    attr_reader :data_type
    attr_writer :default
    attr_writer :null

    def initialize(parent)
      @parent = parent
      parent.columns << self
    end

    def name=(name)
      @name = name
    end

    def data_type=(str)
      case str
      when /serial/i
        autoincrement!
        @data_type = 'INTEGER'
      else
        @data_type = str
      end
    end

    def default
      if defined?(@default)
        @default
      elsif primary_key and data_type =~ /char/i
        BLANK_STRING
      end
    end

    def null
      if defined?(@null)
        @null
      elsif primary_key
        false
      else
        true
      end
    end

    alias :allow_null :null

    def primary_key
      parent.primary_key == self
    end

    def primary_key!
      parent.primary_key = name
    end

    def unique
      if primary_key
        true
      elsif index = parent.indexes[name]
        index.unique
      else
        false
      end
    end

    def named_unique
      unique and parent.indexes[name].name
    end

    def unique!
      parent.add_unique name
    end

    def index!
      parent.add_index name
    end

    def indexed
      primary_key or !!parent.indexes[name]
    end

    def autoincrement!
      @autoincrement = true
    end

    def autoincrement
      @autoincrement == true
    end

    # @private
    def column_names
      [name]
    end

    def parse(str)
      data = Parser.remove_comments(str).strip.unpack('c*')
      
# line 113 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.rb"
class << self
	attr_accessor :_parser_actions
	private :_parser_actions, :_parser_actions=
end
self._parser_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 2, 
	2, 4, 2, 2, 8, 2, 2, 12, 
	2, 10, 14, 2, 12, 13, 2, 13, 
	4, 2, 13, 8, 2, 14, 3, 2, 
	14, 4, 2, 14, 6, 2, 14, 8
]

class << self
	attr_accessor :_parser_key_offsets
	private :_parser_key_offsets, :_parser_key_offsets=
end
self._parser_key_offsets = [
	0, 0, 9, 14, 25, 28, 31, 44, 
	57, 70, 85, 100, 113, 126, 141, 156, 
	171, 186, 201, 214, 229, 244, 257, 274, 
	289, 302, 317, 330, 345, 360, 375, 390, 
	405, 420, 435, 450, 466, 479, 496, 511, 
	526, 541, 556, 569, 586, 601, 614, 631, 
	646, 659, 680, 696, 712, 728, 742, 758, 
	776, 794, 810, 826, 844, 862, 880, 898, 
	916, 932, 950, 968, 984, 1004, 1022, 1038, 
	1056, 1069, 1085, 1103, 1121, 1139, 1157, 1175, 
	1193, 1211, 1229, 1248, 1264, 1284, 1302, 1320, 
	1338, 1356, 1372, 1392, 1410, 1426, 1446, 1464, 
	1480, 1502, 1518, 1534, 1556, 1578, 1602, 1626, 
	1648, 1670, 1694, 1718, 1742, 1766, 1790, 1812, 
	1836, 1860, 1882, 1908, 1932, 1954, 1978, 2000, 
	2024, 2048, 2073, 2095, 2121, 2145, 2169, 2193, 
	2217, 2239, 2265, 2287, 2313, 2337, 2359, 2383, 
	2407, 2431, 2450, 2469, 2490, 2511, 2530, 2549, 
	2570, 2591, 2612, 2633, 2654, 2673, 2694, 2715, 
	2734, 2757, 2778, 2797, 2818, 2837, 2858, 2879, 
	2901, 2920, 2943, 2964, 2985, 3006, 3027, 3046, 
	3069, 3088, 3111, 3132, 3151, 3172, 3193, 3214, 
	3227
]

class << self
	attr_accessor :_parser_trans_keys
	private :_parser_trans_keys, :_parser_trans_keys=
end
self._parser_trans_keys = [
	32, 34, 96, 9, 13, 65, 90, 95, 
	122, 95, 65, 90, 97, 122, 32, 34, 
	96, 9, 13, 48, 57, 65, 90, 95, 
	122, 32, 9, 13, 32, 9, 13, 32, 
	65, 68, 78, 80, 85, 97, 100, 110, 
	112, 117, 9, 13, 32, 65, 68, 78, 
	80, 85, 97, 100, 110, 112, 117, 9, 
	13, 32, 65, 68, 78, 80, 85, 97, 
	100, 110, 112, 117, 9, 13, 32, 65, 
	68, 69, 78, 80, 85, 97, 100, 101, 
	110, 112, 117, 9, 13, 32, 65, 68, 
	70, 78, 80, 85, 97, 100, 102, 110, 
	112, 117, 9, 13, 32, 65, 68, 78, 
	80, 85, 97, 100, 110, 112, 117, 9, 
	13, 32, 65, 68, 78, 80, 85, 97, 
	100, 110, 112, 117, 9, 13, 32, 65, 
	68, 78, 79, 80, 85, 97, 100, 110, 
	111, 112, 117, 9, 13, 32, 65, 68, 
	78, 80, 84, 85, 97, 100, 110, 112, 
	116, 117, 9, 13, 32, 65, 68, 78, 
	80, 82, 85, 97, 100, 110, 112, 114, 
	117, 9, 13, 32, 65, 68, 73, 78, 
	80, 85, 97, 100, 105, 110, 112, 117, 
	9, 13, 32, 65, 68, 77, 78, 80, 
	85, 97, 100, 109, 110, 112, 117, 9, 
	13, 32, 65, 68, 78, 80, 85, 97, 
	100, 110, 112, 117, 9, 13, 32, 65, 
	68, 78, 80, 82, 85, 97, 100, 110, 
	112, 114, 117, 9, 13, 32, 65, 68, 
	78, 80, 85, 89, 97, 100, 110, 112, 
	117, 121, 9, 13, 32, 65, 68, 78, 
	80, 85, 97, 100, 110, 112, 117, 9, 
	13, 32, 65, 68, 73, 78, 79, 80, 
	85, 97, 100, 105, 110, 111, 112, 117, 
	9, 13, 32, 65, 68, 78, 80, 81, 
	85, 97, 100, 110, 112, 113, 117, 9, 
	13, 32, 65, 68, 78, 80, 85, 97, 
	100, 110, 112, 117, 9, 13, 32, 65, 
	68, 69, 78, 80, 85, 97, 100, 101, 
	110, 112, 117, 9, 13, 32, 65, 68, 
	78, 80, 85, 97, 100, 110, 112, 117, 
	9, 13, 32, 65, 68, 75, 78, 80, 
	85, 97, 100, 107, 110, 112, 117, 9, 
	13, 32, 65, 68, 69, 78, 80, 85, 
	97, 100, 101, 110, 112, 117, 9, 13, 
	32, 65, 68, 78, 80, 85, 89, 97, 
	100, 110, 112, 117, 121, 9, 13, 32, 
	65, 68, 78, 79, 80, 85, 97, 100, 
	110, 111, 112, 117, 9, 13, 32, 65, 
	68, 76, 78, 80, 85, 97, 100, 108, 
	110, 112, 117, 9, 13, 32, 65, 68, 
	76, 78, 80, 85, 97, 100, 108, 110, 
	112, 117, 9, 13, 32, 65, 68, 78, 
	80, 84, 85, 97, 100, 110, 112, 116, 
	117, 9, 13, 32, 65, 68, 78, 79, 
	80, 85, 97, 100, 110, 111, 112, 117, 
	9, 13, 32, 65, 68, 73, 78, 80, 
	85, 95, 97, 100, 105, 110, 112, 117, 
	9, 13, 32, 65, 68, 78, 80, 85, 
	97, 100, 110, 112, 117, 9, 13, 32, 
	65, 67, 68, 78, 79, 80, 85, 97, 
	99, 100, 110, 111, 112, 117, 9, 13, 
	32, 65, 68, 78, 80, 82, 85, 97, 
	100, 110, 112, 114, 117, 9, 13, 32, 
	65, 68, 69, 78, 80, 85, 97, 100, 
	101, 110, 112, 117, 9, 13, 32, 65, 
	68, 77, 78, 80, 85, 97, 100, 109, 
	110, 112, 117, 9, 13, 32, 65, 68, 
	69, 78, 80, 85, 97, 100, 101, 110, 
	112, 117, 9, 13, 32, 65, 68, 78, 
	80, 85, 97, 100, 110, 112, 117, 9, 
	13, 32, 65, 68, 78, 79, 80, 84, 
	85, 97, 100, 110, 111, 112, 116, 117, 
	9, 13, 32, 65, 68, 73, 78, 80, 
	85, 97, 100, 105, 110, 112, 117, 9, 
	13, 32, 65, 68, 78, 80, 85, 97, 
	100, 110, 112, 117, 9, 13, 32, 65, 
	68, 76, 78, 80, 84, 85, 97, 100, 
	108, 110, 112, 116, 117, 9, 13, 32, 
	65, 68, 78, 80, 84, 85, 97, 100, 
	110, 112, 116, 117, 9, 13, 32, 65, 
	68, 78, 80, 85, 97, 100, 110, 112, 
	117, 9, 13, 32, 34, 39, 65, 68, 
	78, 80, 85, 97, 100, 110, 112, 117, 
	9, 13, 48, 57, 66, 90, 98, 122, 
	32, 34, 39, 65, 68, 78, 80, 85, 
	92, 97, 100, 110, 112, 117, 9, 13, 
	32, 34, 39, 65, 68, 78, 80, 85, 
	92, 97, 100, 110, 112, 117, 9, 13, 
	32, 34, 39, 65, 68, 78, 80, 85, 
	92, 97, 100, 110, 112, 117, 9, 13, 
	32, 39, 65, 68, 78, 80, 85, 97, 
	100, 110, 112, 117, 9, 13, 32, 34, 
	39, 65, 68, 78, 80, 85, 92, 97, 
	100, 110, 112, 117, 9, 13, 32, 34, 
	39, 65, 68, 69, 78, 80, 85, 92, 
	97, 100, 101, 110, 112, 117, 9, 13, 
	32, 34, 39, 65, 68, 70, 78, 80, 
	85, 92, 97, 100, 102, 110, 112, 117, 
	9, 13, 32, 34, 39, 65, 68, 78, 
	80, 85, 92, 97, 100, 110, 112, 117, 
	9, 13, 32, 34, 39, 65, 68, 78, 
	80, 85, 92, 97, 100, 110, 112, 117, 
	9, 13, 32, 34, 39, 65, 68, 78, 
	79, 80, 85, 92, 97, 100, 110, 111, 
	112, 117, 9, 13, 32, 34, 39, 65, 
	68, 78, 80, 84, 85, 92, 97, 100, 
	110, 112, 116, 117, 9, 13, 32, 34, 
	39, 65, 68, 78, 80, 82, 85, 92, 
	97, 100, 110, 112, 114, 117, 9, 13, 
	32, 34, 39, 65, 68, 73, 78, 80, 
	85, 92, 97, 100, 105, 110, 112, 117, 
	9, 13, 32, 34, 39, 65, 68, 77, 
	78, 80, 85, 92, 97, 100, 109, 110, 
	112, 117, 9, 13, 32, 34, 39, 65, 
	68, 78, 80, 85, 92, 97, 100, 110, 
	112, 117, 9, 13, 32, 34, 39, 65, 
	68, 78, 80, 82, 85, 92, 97, 100, 
	110, 112, 114, 117, 9, 13, 32, 34, 
	39, 65, 68, 78, 80, 85, 89, 92, 
	97, 100, 110, 112, 117, 121, 9, 13, 
	32, 34, 39, 65, 68, 78, 80, 85, 
	92, 97, 100, 110, 112, 117, 9, 13, 
	32, 34, 39, 65, 68, 73, 78, 79, 
	80, 85, 92, 97, 100, 105, 110, 111, 
	112, 117, 9, 13, 32, 34, 39, 65, 
	68, 78, 80, 81, 85, 92, 97, 100, 
	110, 112, 113, 117, 9, 13, 32, 34, 
	39, 65, 68, 78, 80, 85, 92, 97, 
	100, 110, 112, 117, 9, 13, 32, 34, 
	39, 65, 68, 69, 78, 80, 85, 92, 
	97, 100, 101, 110, 112, 117, 9, 13, 
	32, 65, 68, 78, 80, 85, 97, 100, 
	110, 112, 117, 9, 13, 32, 34, 39, 
	65, 68, 78, 80, 85, 92, 97, 100, 
	110, 112, 117, 9, 13, 32, 34, 39, 
	65, 68, 75, 78, 80, 85, 92, 97, 
	100, 107, 110, 112, 117, 9, 13, 32, 
	34, 39, 65, 68, 69, 78, 80, 85, 
	92, 97, 100, 101, 110, 112, 117, 9, 
	13, 32, 34, 39, 65, 68, 78, 80, 
	85, 89, 92, 97, 100, 110, 112, 117, 
	121, 9, 13, 32, 34, 39, 65, 68, 
	78, 79, 80, 85, 92, 97, 100, 110, 
	111, 112, 117, 9, 13, 32, 34, 39, 
	65, 68, 76, 78, 80, 85, 92, 97, 
	100, 108, 110, 112, 117, 9, 13, 32, 
	34, 39, 65, 68, 76, 78, 80, 85, 
	92, 97, 100, 108, 110, 112, 117, 9, 
	13, 32, 34, 39, 65, 68, 78, 80, 
	84, 85, 92, 97, 100, 110, 112, 116, 
	117, 9, 13, 32, 34, 39, 65, 68, 
	78, 79, 80, 85, 92, 97, 100, 110, 
	111, 112, 117, 9, 13, 32, 34, 39, 
	65, 68, 73, 78, 80, 85, 92, 95, 
	97, 100, 105, 110, 112, 117, 9, 13, 
	32, 34, 39, 65, 68, 78, 80, 85, 
	92, 97, 100, 110, 112, 117, 9, 13, 
	32, 34, 39, 65, 67, 68, 78, 79, 
	80, 85, 92, 97, 99, 100, 110, 111, 
	112, 117, 9, 13, 32, 34, 39, 65, 
	68, 78, 80, 82, 85, 92, 97, 100, 
	110, 112, 114, 117, 9, 13, 32, 34, 
	39, 65, 68, 69, 78, 80, 85, 92, 
	97, 100, 101, 110, 112, 117, 9, 13, 
	32, 34, 39, 65, 68, 77, 78, 80, 
	85, 92, 97, 100, 109, 110, 112, 117, 
	9, 13, 32, 34, 39, 65, 68, 69, 
	78, 80, 85, 92, 97, 100, 101, 110, 
	112, 117, 9, 13, 32, 34, 39, 65, 
	68, 78, 80, 85, 92, 97, 100, 110, 
	112, 117, 9, 13, 32, 34, 39, 65, 
	68, 78, 79, 80, 84, 85, 92, 97, 
	100, 110, 111, 112, 116, 117, 9, 13, 
	32, 34, 39, 65, 68, 73, 78, 80, 
	85, 92, 97, 100, 105, 110, 112, 117, 
	9, 13, 32, 34, 39, 65, 68, 78, 
	80, 85, 92, 97, 100, 110, 112, 117, 
	9, 13, 32, 34, 39, 65, 68, 76, 
	78, 80, 84, 85, 92, 97, 100, 108, 
	110, 112, 116, 117, 9, 13, 32, 34, 
	39, 65, 68, 78, 80, 84, 85, 92, 
	97, 100, 110, 112, 116, 117, 9, 13, 
	32, 34, 39, 65, 68, 78, 80, 85, 
	92, 97, 100, 110, 112, 117, 9, 13, 
	32, 34, 39, 65, 68, 78, 80, 85, 
	92, 97, 100, 110, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 34, 
	39, 65, 68, 78, 80, 85, 92, 97, 
	100, 110, 112, 117, 9, 13, 32, 34, 
	39, 65, 68, 78, 80, 85, 92, 97, 
	100, 110, 112, 117, 9, 13, 32, 34, 
	39, 65, 68, 78, 80, 85, 92, 97, 
	100, 110, 112, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 34, 39, 65, 
	68, 78, 80, 85, 92, 97, 100, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 34, 39, 65, 68, 69, 
	78, 80, 85, 92, 97, 100, 101, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 34, 39, 65, 68, 70, 
	78, 80, 85, 92, 97, 100, 102, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 34, 39, 65, 68, 78, 
	80, 85, 92, 97, 100, 110, 112, 117, 
	9, 13, 48, 57, 66, 90, 98, 122, 
	32, 34, 39, 65, 68, 78, 80, 85, 
	92, 97, 100, 110, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 34, 
	39, 65, 68, 78, 79, 80, 85, 92, 
	97, 100, 110, 111, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 34, 
	39, 65, 68, 78, 80, 84, 85, 92, 
	97, 100, 110, 112, 116, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 34, 
	39, 65, 68, 78, 80, 82, 85, 92, 
	97, 100, 110, 112, 114, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 34, 
	39, 65, 68, 73, 78, 80, 85, 92, 
	97, 100, 105, 110, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 34, 
	39, 65, 68, 77, 78, 80, 85, 92, 
	97, 100, 109, 110, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 34, 
	39, 65, 68, 78, 80, 85, 92, 97, 
	100, 110, 112, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 34, 39, 65, 
	68, 78, 80, 82, 85, 92, 97, 100, 
	110, 112, 114, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 34, 39, 65, 
	68, 78, 80, 85, 89, 92, 97, 100, 
	110, 112, 117, 121, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 34, 39, 65, 
	68, 78, 80, 85, 92, 97, 100, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 34, 39, 65, 68, 73, 
	78, 79, 80, 85, 92, 97, 100, 105, 
	110, 111, 112, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 34, 39, 65, 
	68, 78, 80, 81, 85, 92, 97, 100, 
	110, 112, 113, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 34, 39, 65, 
	68, 78, 80, 85, 92, 97, 100, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 34, 39, 65, 68, 69, 
	78, 80, 85, 92, 97, 100, 101, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 34, 39, 65, 68, 78, 
	80, 85, 92, 97, 100, 110, 112, 117, 
	9, 13, 48, 57, 66, 90, 98, 122, 
	32, 34, 39, 65, 68, 78, 80, 84, 
	85, 92, 97, 100, 110, 112, 116, 117, 
	9, 13, 48, 57, 66, 90, 98, 122, 
	32, 34, 39, 65, 68, 78, 79, 80, 
	85, 92, 97, 100, 110, 111, 112, 117, 
	9, 13, 48, 57, 66, 90, 98, 122, 
	32, 34, 39, 65, 68, 73, 78, 80, 
	85, 92, 95, 97, 100, 105, 110, 112, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 34, 39, 65, 68, 78, 80, 
	85, 92, 97, 100, 110, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	34, 39, 65, 67, 68, 78, 79, 80, 
	85, 92, 97, 99, 100, 110, 111, 112, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 34, 39, 65, 68, 78, 80, 
	82, 85, 92, 97, 100, 110, 112, 114, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 34, 39, 65, 68, 69, 78, 
	80, 85, 92, 97, 100, 101, 110, 112, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 34, 39, 65, 68, 77, 78, 
	80, 85, 92, 97, 100, 109, 110, 112, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 34, 39, 65, 68, 69, 78, 
	80, 85, 92, 97, 100, 101, 110, 112, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 34, 39, 65, 68, 78, 80, 
	85, 92, 97, 100, 110, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	34, 39, 65, 68, 78, 79, 80, 84, 
	85, 92, 97, 100, 110, 111, 112, 116, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 34, 39, 65, 68, 78, 80, 
	85, 92, 97, 100, 110, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	34, 39, 65, 68, 76, 78, 80, 84, 
	85, 92, 97, 100, 108, 110, 112, 116, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 34, 39, 65, 68, 78, 80, 
	84, 85, 92, 97, 100, 110, 112, 116, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 34, 39, 65, 68, 78, 80, 
	85, 92, 97, 100, 110, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	34, 39, 65, 68, 78, 79, 80, 85, 
	92, 97, 100, 110, 111, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	34, 39, 65, 68, 76, 78, 80, 85, 
	92, 97, 100, 108, 110, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	34, 39, 65, 68, 76, 78, 80, 85, 
	92, 97, 100, 108, 110, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	65, 68, 78, 80, 85, 97, 100, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 65, 68, 78, 80, 85, 
	97, 100, 110, 112, 117, 9, 13, 48, 
	57, 66, 90, 98, 122, 32, 65, 68, 
	69, 78, 80, 85, 97, 100, 101, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 65, 68, 70, 78, 80, 
	85, 97, 100, 102, 110, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	65, 68, 78, 80, 85, 97, 100, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 65, 68, 78, 80, 85, 
	97, 100, 110, 112, 117, 9, 13, 48, 
	57, 66, 90, 98, 122, 32, 65, 68, 
	78, 79, 80, 85, 97, 100, 110, 111, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 65, 68, 78, 80, 84, 
	85, 97, 100, 110, 112, 116, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	65, 68, 78, 80, 82, 85, 97, 100, 
	110, 112, 114, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 65, 68, 73, 
	78, 80, 85, 97, 100, 105, 110, 112, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 65, 68, 77, 78, 80, 85, 
	97, 100, 109, 110, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 65, 
	68, 78, 80, 85, 97, 100, 110, 112, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 65, 68, 78, 80, 82, 85, 
	97, 100, 110, 112, 114, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 65, 
	68, 78, 80, 85, 89, 97, 100, 110, 
	112, 117, 121, 9, 13, 48, 57, 66, 
	90, 98, 122, 32, 65, 68, 78, 80, 
	85, 97, 100, 110, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 65, 
	68, 73, 78, 79, 80, 85, 97, 100, 
	105, 110, 111, 112, 117, 9, 13, 48, 
	57, 66, 90, 98, 122, 32, 65, 68, 
	78, 80, 81, 85, 97, 100, 110, 112, 
	113, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 65, 68, 78, 80, 85, 
	97, 100, 110, 112, 117, 9, 13, 48, 
	57, 66, 90, 98, 122, 32, 65, 68, 
	69, 78, 80, 85, 97, 100, 101, 110, 
	112, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 65, 68, 78, 80, 85, 
	97, 100, 110, 112, 117, 9, 13, 48, 
	57, 66, 90, 98, 122, 32, 65, 68, 
	78, 80, 84, 85, 97, 100, 110, 112, 
	116, 117, 9, 13, 48, 57, 66, 90, 
	98, 122, 32, 65, 68, 78, 79, 80, 
	85, 97, 100, 110, 111, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	65, 68, 73, 78, 80, 85, 95, 97, 
	100, 105, 110, 112, 117, 9, 13, 48, 
	57, 66, 90, 98, 122, 32, 65, 68, 
	78, 80, 85, 97, 100, 110, 112, 117, 
	9, 13, 48, 57, 66, 90, 98, 122, 
	32, 65, 67, 68, 78, 79, 80, 85, 
	97, 99, 100, 110, 111, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	65, 68, 78, 80, 82, 85, 97, 100, 
	110, 112, 114, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 65, 68, 69, 
	78, 80, 85, 97, 100, 101, 110, 112, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 65, 68, 77, 78, 80, 85, 
	97, 100, 109, 110, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 65, 
	68, 69, 78, 80, 85, 97, 100, 101, 
	110, 112, 117, 9, 13, 48, 57, 66, 
	90, 98, 122, 32, 65, 68, 78, 80, 
	85, 97, 100, 110, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 65, 
	68, 78, 79, 80, 84, 85, 97, 100, 
	110, 111, 112, 116, 117, 9, 13, 48, 
	57, 66, 90, 98, 122, 32, 65, 68, 
	78, 80, 85, 97, 100, 110, 112, 117, 
	9, 13, 48, 57, 66, 90, 98, 122, 
	32, 65, 68, 76, 78, 80, 84, 85, 
	97, 100, 108, 110, 112, 116, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	65, 68, 78, 80, 84, 85, 97, 100, 
	110, 112, 116, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 65, 68, 78, 
	80, 85, 97, 100, 110, 112, 117, 9, 
	13, 48, 57, 66, 90, 98, 122, 32, 
	65, 68, 78, 79, 80, 85, 97, 100, 
	110, 111, 112, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 65, 68, 76, 
	78, 80, 85, 97, 100, 108, 110, 112, 
	117, 9, 13, 48, 57, 66, 90, 98, 
	122, 32, 65, 68, 76, 78, 80, 85, 
	97, 100, 108, 110, 112, 117, 9, 13, 
	48, 57, 66, 90, 98, 122, 32, 65, 
	68, 78, 80, 85, 97, 100, 110, 112, 
	117, 9, 13, 32, 65, 68, 78, 80, 
	85, 97, 100, 110, 112, 117, 9, 13, 
	0
]

class << self
	attr_accessor :_parser_single_lengths
	private :_parser_single_lengths, :_parser_single_lengths=
end
self._parser_single_lengths = [
	0, 3, 1, 3, 1, 1, 11, 11, 
	11, 13, 13, 11, 11, 13, 13, 13, 
	13, 13, 11, 13, 13, 11, 15, 13, 
	11, 13, 11, 13, 13, 13, 13, 13, 
	13, 13, 13, 14, 11, 15, 13, 13, 
	13, 13, 11, 15, 13, 11, 15, 13, 
	11, 13, 14, 14, 14, 12, 14, 16, 
	16, 14, 14, 16, 16, 16, 16, 16, 
	14, 16, 16, 14, 18, 16, 14, 16, 
	11, 14, 16, 16, 16, 16, 16, 16, 
	16, 16, 17, 14, 18, 16, 16, 16, 
	16, 14, 18, 16, 14, 18, 16, 14, 
	14, 14, 14, 14, 14, 16, 16, 14, 
	14, 16, 16, 16, 16, 16, 14, 16, 
	16, 14, 18, 16, 14, 16, 14, 16, 
	16, 17, 14, 18, 16, 16, 16, 16, 
	14, 18, 14, 18, 16, 14, 16, 16, 
	16, 11, 11, 13, 13, 11, 11, 13, 
	13, 13, 13, 13, 11, 13, 13, 11, 
	15, 13, 11, 13, 11, 13, 13, 14, 
	11, 15, 13, 13, 13, 13, 11, 15, 
	11, 15, 13, 11, 13, 13, 13, 11, 
	11
]

class << self
	attr_accessor :_parser_range_lengths
	private :_parser_range_lengths, :_parser_range_lengths=
end
self._parser_range_lengths = [
	0, 3, 2, 4, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 4, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	4, 1, 1, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 1, 
	1
]

class << self
	attr_accessor :_parser_index_offsets
	private :_parser_index_offsets, :_parser_index_offsets=
end
self._parser_index_offsets = [
	0, 0, 7, 11, 19, 22, 25, 38, 
	51, 64, 79, 94, 107, 120, 135, 150, 
	165, 180, 195, 208, 223, 238, 251, 268, 
	283, 296, 311, 324, 339, 354, 369, 384, 
	399, 414, 429, 444, 460, 473, 490, 505, 
	520, 535, 550, 563, 580, 595, 608, 625, 
	640, 653, 671, 687, 703, 719, 733, 749, 
	767, 785, 801, 817, 835, 853, 871, 889, 
	907, 923, 941, 959, 975, 995, 1013, 1029, 
	1047, 1060, 1076, 1094, 1112, 1130, 1148, 1166, 
	1184, 1202, 1220, 1239, 1255, 1275, 1293, 1311, 
	1329, 1347, 1363, 1383, 1401, 1417, 1437, 1455, 
	1471, 1490, 1506, 1522, 1541, 1560, 1581, 1602, 
	1621, 1640, 1661, 1682, 1703, 1724, 1745, 1764, 
	1785, 1806, 1825, 1848, 1869, 1888, 1909, 1928, 
	1949, 1970, 1992, 2011, 2034, 2055, 2076, 2097, 
	2118, 2137, 2160, 2179, 2202, 2223, 2242, 2263, 
	2284, 2305, 2321, 2337, 2355, 2373, 2389, 2405, 
	2423, 2441, 2459, 2477, 2495, 2511, 2529, 2547, 
	2563, 2583, 2601, 2617, 2635, 2651, 2669, 2687, 
	2706, 2722, 2742, 2760, 2778, 2796, 2814, 2830, 
	2850, 2866, 2886, 2904, 2920, 2938, 2956, 2974, 
	2987
]

class << self
	attr_accessor :_parser_indicies
	private :_parser_indicies, :_parser_indicies=
end
self._parser_indicies = [
	0, 2, 2, 0, 3, 3, 1, 3, 
	3, 3, 1, 4, 5, 5, 4, 6, 
	6, 6, 1, 8, 8, 7, 9, 9, 
	1, 11, 12, 13, 14, 15, 16, 12, 
	13, 14, 15, 16, 11, 10, 11, 12, 
	13, 17, 15, 16, 12, 13, 17, 15, 
	16, 11, 10, 11, 12, 13, 14, 15, 
	18, 12, 13, 14, 15, 18, 11, 10, 
	11, 12, 13, 19, 14, 15, 16, 12, 
	13, 19, 14, 15, 16, 11, 10, 11, 
	12, 13, 20, 14, 15, 16, 12, 13, 
	20, 14, 15, 16, 11, 10, 11, 21, 
	13, 14, 15, 16, 21, 13, 14, 15, 
	16, 11, 10, 11, 12, 13, 14, 15, 
	22, 12, 13, 14, 15, 22, 11, 10, 
	11, 12, 13, 14, 23, 15, 16, 12, 
	13, 14, 23, 15, 16, 11, 10, 11, 
	12, 13, 14, 15, 24, 16, 12, 13, 
	14, 15, 24, 16, 11, 10, 11, 12, 
	13, 14, 15, 25, 16, 12, 13, 14, 
	15, 25, 16, 11, 10, 11, 12, 13, 
	26, 14, 15, 16, 12, 13, 26, 14, 
	15, 16, 11, 10, 11, 12, 13, 27, 
	14, 15, 16, 12, 13, 27, 14, 15, 
	16, 11, 10, 11, 28, 13, 14, 15, 
	16, 28, 13, 14, 15, 16, 11, 10, 
	11, 12, 13, 14, 15, 29, 18, 12, 
	13, 14, 15, 29, 18, 11, 10, 11, 
	12, 13, 14, 15, 16, 30, 12, 13, 
	14, 15, 16, 30, 11, 10, 11, 12, 
	13, 31, 15, 16, 12, 13, 31, 15, 
	16, 11, 10, 11, 12, 13, 32, 14, 
	23, 15, 16, 12, 13, 32, 14, 23, 
	15, 16, 11, 10, 11, 12, 13, 14, 
	15, 33, 16, 12, 13, 14, 15, 33, 
	16, 11, 10, 11, 12, 13, 14, 15, 
	34, 12, 13, 14, 15, 34, 11, 10, 
	11, 12, 13, 35, 31, 15, 16, 12, 
	13, 35, 31, 15, 16, 11, 10, 36, 
	12, 13, 14, 15, 16, 12, 13, 14, 
	15, 16, 36, 10, 36, 12, 13, 37, 
	17, 15, 16, 12, 13, 37, 17, 15, 
	16, 36, 10, 11, 12, 13, 38, 14, 
	15, 16, 12, 13, 38, 14, 15, 16, 
	11, 10, 11, 12, 13, 14, 15, 16, 
	39, 12, 13, 14, 15, 16, 39, 11, 
	10, 11, 12, 13, 14, 23, 15, 40, 
	12, 13, 14, 23, 15, 40, 11, 10, 
	11, 12, 13, 41, 31, 15, 16, 12, 
	13, 41, 31, 15, 16, 11, 10, 11, 
	12, 13, 42, 14, 15, 16, 12, 13, 
	42, 14, 15, 16, 11, 10, 11, 12, 
	13, 31, 15, 43, 16, 12, 13, 31, 
	15, 43, 16, 11, 10, 11, 12, 13, 
	14, 44, 15, 16, 12, 13, 14, 44, 
	15, 16, 11, 10, 11, 12, 13, 45, 
	14, 15, 16, 46, 12, 13, 45, 14, 
	15, 16, 11, 10, 11, 12, 13, 47, 
	15, 16, 12, 13, 47, 15, 16, 11, 
	10, 11, 12, 48, 13, 14, 23, 15, 
	16, 12, 48, 13, 14, 23, 15, 16, 
	11, 10, 11, 12, 13, 14, 15, 49, 
	16, 12, 13, 14, 15, 49, 16, 11, 
	10, 11, 12, 13, 50, 14, 15, 16, 
	12, 13, 50, 14, 15, 16, 11, 10, 
	11, 12, 13, 51, 14, 15, 16, 12, 
	13, 51, 14, 15, 16, 11, 10, 11, 
	12, 13, 52, 14, 15, 16, 12, 13, 
	52, 14, 15, 16, 11, 10, 11, 12, 
	13, 53, 15, 16, 12, 13, 53, 15, 
	16, 11, 10, 11, 12, 13, 14, 23, 
	15, 54, 16, 12, 13, 14, 23, 15, 
	54, 16, 11, 10, 11, 12, 13, 45, 
	14, 15, 16, 12, 13, 45, 14, 15, 
	16, 11, 10, 55, 12, 13, 14, 15, 
	16, 12, 13, 14, 15, 16, 55, 10, 
	11, 12, 13, 56, 31, 15, 43, 16, 
	12, 13, 56, 31, 15, 43, 16, 11, 
	10, 11, 12, 13, 14, 15, 57, 16, 
	12, 13, 14, 15, 57, 16, 11, 10, 
	58, 12, 13, 14, 15, 16, 12, 13, 
	14, 15, 16, 58, 10, 58, 59, 59, 
	61, 62, 63, 64, 65, 61, 62, 63, 
	64, 65, 58, 60, 60, 60, 10, 67, 
	10, 68, 69, 70, 71, 72, 73, 74, 
	69, 70, 71, 72, 73, 67, 66, 76, 
	77, 78, 79, 80, 81, 82, 83, 84, 
	79, 80, 81, 82, 83, 76, 75, 76, 
	77, 78, 79, 80, 85, 82, 83, 84, 
	79, 80, 85, 82, 83, 76, 75, 11, 
	75, 12, 13, 14, 15, 16, 12, 13, 
	14, 15, 16, 11, 10, 76, 77, 78, 
	79, 80, 81, 82, 86, 84, 79, 80, 
	81, 82, 86, 76, 75, 76, 77, 78, 
	79, 80, 87, 81, 82, 83, 84, 79, 
	80, 87, 81, 82, 83, 76, 75, 76, 
	77, 78, 79, 80, 88, 81, 82, 83, 
	84, 79, 80, 88, 81, 82, 83, 76, 
	75, 76, 77, 78, 89, 80, 81, 82, 
	83, 84, 89, 80, 81, 82, 83, 76, 
	75, 76, 77, 78, 79, 80, 81, 82, 
	90, 84, 79, 80, 81, 82, 90, 76, 
	75, 76, 77, 78, 79, 80, 81, 91, 
	82, 83, 84, 79, 80, 81, 91, 82, 
	83, 76, 75, 76, 77, 78, 79, 80, 
	81, 82, 92, 83, 84, 79, 80, 81, 
	82, 92, 83, 76, 75, 76, 77, 78, 
	79, 80, 81, 82, 93, 83, 84, 79, 
	80, 81, 82, 93, 83, 76, 75, 76, 
	77, 78, 79, 80, 94, 81, 82, 83, 
	84, 79, 80, 94, 81, 82, 83, 76, 
	75, 76, 77, 78, 79, 80, 95, 81, 
	82, 83, 84, 79, 80, 95, 81, 82, 
	83, 76, 75, 76, 77, 78, 96, 80, 
	81, 82, 83, 84, 96, 80, 81, 82, 
	83, 76, 75, 76, 77, 78, 79, 80, 
	81, 82, 97, 86, 84, 79, 80, 81, 
	82, 97, 86, 76, 75, 76, 77, 78, 
	79, 80, 81, 82, 83, 98, 84, 79, 
	80, 81, 82, 83, 98, 76, 75, 76, 
	77, 78, 79, 80, 99, 82, 83, 84, 
	79, 80, 99, 82, 83, 76, 75, 76, 
	77, 78, 79, 80, 100, 81, 91, 82, 
	83, 84, 79, 80, 100, 81, 91, 82, 
	83, 76, 75, 76, 77, 78, 79, 80, 
	81, 82, 101, 83, 84, 79, 80, 81, 
	82, 101, 83, 76, 75, 76, 77, 78, 
	79, 80, 81, 82, 102, 84, 79, 80, 
	81, 82, 102, 76, 75, 76, 77, 78, 
	79, 80, 103, 99, 82, 83, 84, 79, 
	80, 103, 99, 82, 83, 76, 75, 76, 
	79, 80, 81, 82, 83, 79, 80, 81, 
	82, 83, 76, 75, 104, 77, 78, 79, 
	80, 81, 82, 83, 84, 79, 80, 81, 
	82, 83, 104, 75, 104, 77, 78, 79, 
	80, 105, 85, 82, 83, 84, 79, 80, 
	105, 85, 82, 83, 104, 75, 76, 77, 
	78, 79, 80, 106, 81, 82, 83, 84, 
	79, 80, 106, 81, 82, 83, 76, 75, 
	76, 77, 78, 79, 80, 81, 82, 83, 
	107, 84, 79, 80, 81, 82, 83, 107, 
	76, 75, 76, 77, 78, 79, 80, 81, 
	91, 82, 108, 84, 79, 80, 81, 91, 
	82, 108, 76, 75, 76, 77, 78, 79, 
	80, 109, 99, 82, 83, 84, 79, 80, 
	109, 99, 82, 83, 76, 75, 76, 77, 
	78, 79, 80, 110, 81, 82, 83, 84, 
	79, 80, 110, 81, 82, 83, 76, 75, 
	76, 77, 78, 79, 80, 99, 82, 111, 
	83, 84, 79, 80, 99, 82, 111, 83, 
	76, 75, 76, 77, 78, 79, 80, 81, 
	112, 82, 83, 84, 79, 80, 81, 112, 
	82, 83, 76, 75, 76, 77, 78, 79, 
	80, 113, 81, 82, 83, 84, 114, 79, 
	80, 113, 81, 82, 83, 76, 75, 76, 
	77, 78, 79, 80, 115, 82, 83, 84, 
	79, 80, 115, 82, 83, 76, 75, 76, 
	77, 78, 79, 116, 80, 81, 91, 82, 
	83, 84, 79, 116, 80, 81, 91, 82, 
	83, 76, 75, 76, 77, 78, 79, 80, 
	81, 82, 117, 83, 84, 79, 80, 81, 
	82, 117, 83, 76, 75, 76, 77, 78, 
	79, 80, 118, 81, 82, 83, 84, 79, 
	80, 118, 81, 82, 83, 76, 75, 76, 
	77, 78, 79, 80, 119, 81, 82, 83, 
	84, 79, 80, 119, 81, 82, 83, 76, 
	75, 76, 77, 78, 79, 80, 120, 81, 
	82, 83, 84, 79, 80, 120, 81, 82, 
	83, 76, 75, 76, 77, 78, 79, 80, 
	121, 82, 83, 84, 79, 80, 121, 82, 
	83, 76, 75, 76, 77, 78, 79, 80, 
	81, 91, 82, 122, 83, 84, 79, 80, 
	81, 91, 82, 122, 83, 76, 75, 76, 
	77, 78, 79, 80, 113, 81, 82, 83, 
	84, 79, 80, 113, 81, 82, 83, 76, 
	75, 123, 77, 78, 79, 80, 81, 82, 
	83, 84, 79, 80, 81, 82, 83, 123, 
	75, 76, 77, 78, 79, 80, 124, 99, 
	82, 111, 83, 84, 79, 80, 124, 99, 
	82, 111, 83, 76, 75, 76, 77, 78, 
	79, 80, 81, 82, 125, 83, 84, 79, 
	80, 81, 82, 125, 83, 76, 75, 126, 
	77, 78, 79, 80, 81, 82, 83, 84, 
	79, 80, 81, 82, 83, 126, 75, 126, 
	127, 128, 130, 131, 132, 133, 134, 84, 
	130, 131, 132, 133, 134, 126, 129, 129, 
	129, 75, 67, 10, 135, 69, 70, 71, 
	72, 73, 74, 69, 70, 71, 72, 73, 
	67, 66, 76, 77, 136, 79, 80, 81, 
	82, 83, 84, 79, 80, 81, 82, 83, 
	76, 75, 137, 77, 78, 139, 140, 141, 
	142, 143, 84, 139, 140, 141, 142, 143, 
	137, 138, 138, 138, 75, 137, 77, 78, 
	139, 140, 141, 142, 144, 84, 139, 140, 
	141, 142, 144, 137, 138, 138, 138, 75, 
	137, 77, 78, 139, 140, 145, 141, 142, 
	143, 84, 139, 140, 145, 141, 142, 143, 
	137, 138, 138, 138, 75, 137, 77, 78, 
	139, 140, 146, 141, 142, 143, 84, 139, 
	140, 146, 141, 142, 143, 137, 138, 138, 
	138, 75, 137, 77, 78, 147, 140, 141, 
	142, 143, 84, 147, 140, 141, 142, 143, 
	137, 138, 138, 138, 75, 137, 77, 78, 
	139, 140, 141, 142, 148, 84, 139, 140, 
	141, 142, 148, 137, 138, 138, 138, 75, 
	137, 77, 78, 139, 140, 141, 149, 142, 
	143, 84, 139, 140, 141, 149, 142, 143, 
	137, 138, 138, 138, 75, 137, 77, 78, 
	139, 140, 141, 142, 150, 143, 84, 139, 
	140, 141, 142, 150, 143, 137, 138, 138, 
	138, 75, 137, 77, 78, 139, 140, 141, 
	142, 151, 143, 84, 139, 140, 141, 142, 
	151, 143, 137, 138, 138, 138, 75, 137, 
	77, 78, 139, 140, 152, 141, 142, 143, 
	84, 139, 140, 152, 141, 142, 143, 137, 
	138, 138, 138, 75, 137, 77, 78, 139, 
	140, 153, 141, 142, 143, 84, 139, 140, 
	153, 141, 142, 143, 137, 138, 138, 138, 
	75, 137, 77, 78, 154, 140, 141, 142, 
	143, 84, 154, 140, 141, 142, 143, 137, 
	138, 138, 138, 75, 137, 77, 78, 139, 
	140, 141, 142, 155, 144, 84, 139, 140, 
	141, 142, 155, 144, 137, 138, 138, 138, 
	75, 137, 77, 78, 139, 140, 141, 142, 
	143, 156, 84, 139, 140, 141, 142, 143, 
	156, 137, 138, 138, 138, 75, 137, 77, 
	78, 139, 140, 157, 142, 143, 84, 139, 
	140, 157, 142, 143, 137, 138, 138, 138, 
	75, 137, 77, 78, 139, 140, 158, 141, 
	149, 142, 143, 84, 139, 140, 158, 141, 
	149, 142, 143, 137, 138, 138, 138, 75, 
	137, 77, 78, 139, 140, 141, 142, 159, 
	143, 84, 139, 140, 141, 142, 159, 143, 
	137, 138, 138, 138, 75, 137, 77, 78, 
	139, 140, 141, 142, 160, 84, 139, 140, 
	141, 142, 160, 137, 138, 138, 138, 75, 
	137, 77, 78, 139, 140, 161, 157, 142, 
	143, 84, 139, 140, 161, 157, 142, 143, 
	137, 138, 138, 138, 75, 162, 77, 78, 
	139, 140, 141, 142, 143, 84, 139, 140, 
	141, 142, 143, 162, 138, 138, 138, 75, 
	137, 77, 78, 139, 140, 157, 142, 163, 
	143, 84, 139, 140, 157, 142, 163, 143, 
	137, 138, 138, 138, 75, 137, 77, 78, 
	139, 140, 141, 164, 142, 143, 84, 139, 
	140, 141, 164, 142, 143, 137, 138, 138, 
	138, 75, 137, 77, 78, 139, 140, 165, 
	141, 142, 143, 84, 114, 139, 140, 165, 
	141, 142, 143, 137, 138, 138, 138, 75, 
	137, 77, 78, 139, 140, 166, 142, 143, 
	84, 139, 140, 166, 142, 143, 137, 138, 
	138, 138, 75, 137, 77, 78, 139, 167, 
	140, 141, 149, 142, 143, 84, 139, 167, 
	140, 141, 149, 142, 143, 137, 138, 138, 
	138, 75, 137, 77, 78, 139, 140, 141, 
	142, 168, 143, 84, 139, 140, 141, 142, 
	168, 143, 137, 138, 138, 138, 75, 137, 
	77, 78, 139, 140, 169, 141, 142, 143, 
	84, 139, 140, 169, 141, 142, 143, 137, 
	138, 138, 138, 75, 137, 77, 78, 139, 
	140, 170, 141, 142, 143, 84, 139, 140, 
	170, 141, 142, 143, 137, 138, 138, 138, 
	75, 137, 77, 78, 139, 140, 171, 141, 
	142, 143, 84, 139, 140, 171, 141, 142, 
	143, 137, 138, 138, 138, 75, 137, 77, 
	78, 139, 140, 172, 142, 143, 84, 139, 
	140, 172, 142, 143, 137, 138, 138, 138, 
	75, 137, 77, 78, 139, 140, 141, 149, 
	142, 173, 143, 84, 139, 140, 141, 149, 
	142, 173, 143, 137, 138, 138, 138, 75, 
	174, 77, 78, 139, 140, 141, 142, 143, 
	84, 139, 140, 141, 142, 143, 174, 138, 
	138, 138, 75, 137, 77, 78, 139, 140, 
	175, 157, 142, 163, 143, 84, 139, 140, 
	175, 157, 142, 163, 143, 137, 138, 138, 
	138, 75, 137, 77, 78, 139, 140, 141, 
	142, 176, 143, 84, 139, 140, 141, 142, 
	176, 143, 137, 138, 138, 138, 75, 177, 
	77, 78, 139, 140, 141, 142, 143, 84, 
	139, 140, 141, 142, 143, 177, 138, 138, 
	138, 75, 137, 77, 78, 139, 140, 141, 
	149, 142, 178, 84, 139, 140, 141, 149, 
	142, 178, 137, 138, 138, 138, 75, 137, 
	77, 78, 139, 140, 179, 157, 142, 143, 
	84, 139, 140, 179, 157, 142, 143, 137, 
	138, 138, 138, 75, 137, 77, 78, 139, 
	140, 180, 141, 142, 143, 84, 139, 140, 
	180, 141, 142, 143, 137, 138, 138, 138, 
	75, 181, 183, 184, 185, 186, 187, 183, 
	184, 185, 186, 187, 181, 182, 182, 182, 
	10, 181, 183, 184, 185, 186, 188, 183, 
	184, 185, 186, 188, 181, 182, 182, 182, 
	10, 181, 183, 184, 189, 185, 186, 187, 
	183, 184, 189, 185, 186, 187, 181, 182, 
	182, 182, 10, 181, 183, 184, 190, 185, 
	186, 187, 183, 184, 190, 185, 186, 187, 
	181, 182, 182, 182, 10, 181, 191, 184, 
	185, 186, 187, 191, 184, 185, 186, 187, 
	181, 182, 182, 182, 10, 181, 183, 184, 
	185, 186, 192, 183, 184, 185, 186, 192, 
	181, 182, 182, 182, 10, 181, 183, 184, 
	185, 193, 186, 187, 183, 184, 185, 193, 
	186, 187, 181, 182, 182, 182, 10, 181, 
	183, 184, 185, 186, 194, 187, 183, 184, 
	185, 186, 194, 187, 181, 182, 182, 182, 
	10, 181, 183, 184, 185, 186, 195, 187, 
	183, 184, 185, 186, 195, 187, 181, 182, 
	182, 182, 10, 181, 183, 184, 196, 185, 
	186, 187, 183, 184, 196, 185, 186, 187, 
	181, 182, 182, 182, 10, 181, 183, 184, 
	197, 185, 186, 187, 183, 184, 197, 185, 
	186, 187, 181, 182, 182, 182, 10, 181, 
	198, 184, 185, 186, 187, 198, 184, 185, 
	186, 187, 181, 182, 182, 182, 10, 181, 
	183, 184, 185, 186, 199, 188, 183, 184, 
	185, 186, 199, 188, 181, 182, 182, 182, 
	10, 181, 183, 184, 185, 186, 187, 200, 
	183, 184, 185, 186, 187, 200, 181, 182, 
	182, 182, 10, 181, 183, 184, 201, 186, 
	187, 183, 184, 201, 186, 187, 181, 182, 
	182, 182, 10, 181, 183, 184, 202, 185, 
	193, 186, 187, 183, 184, 202, 185, 193, 
	186, 187, 181, 182, 182, 182, 10, 181, 
	183, 184, 185, 186, 203, 187, 183, 184, 
	185, 186, 203, 187, 181, 182, 182, 182, 
	10, 181, 183, 184, 185, 186, 204, 183, 
	184, 185, 186, 204, 181, 182, 182, 182, 
	10, 181, 183, 184, 205, 201, 186, 187, 
	183, 184, 205, 201, 186, 187, 181, 182, 
	182, 182, 10, 206, 183, 184, 185, 186, 
	187, 183, 184, 185, 186, 187, 206, 182, 
	182, 182, 10, 181, 183, 184, 201, 186, 
	207, 187, 183, 184, 201, 186, 207, 187, 
	181, 182, 182, 182, 10, 181, 183, 184, 
	185, 208, 186, 187, 183, 184, 185, 208, 
	186, 187, 181, 182, 182, 182, 10, 181, 
	183, 184, 209, 185, 186, 187, 46, 183, 
	184, 209, 185, 186, 187, 181, 182, 182, 
	182, 10, 181, 183, 184, 210, 186, 187, 
	183, 184, 210, 186, 187, 181, 182, 182, 
	182, 10, 181, 183, 211, 184, 185, 193, 
	186, 187, 183, 211, 184, 185, 193, 186, 
	187, 181, 182, 182, 182, 10, 181, 183, 
	184, 185, 186, 212, 187, 183, 184, 185, 
	186, 212, 187, 181, 182, 182, 182, 10, 
	181, 183, 184, 213, 185, 186, 187, 183, 
	184, 213, 185, 186, 187, 181, 182, 182, 
	182, 10, 181, 183, 184, 214, 185, 186, 
	187, 183, 184, 214, 185, 186, 187, 181, 
	182, 182, 182, 10, 181, 183, 184, 215, 
	185, 186, 187, 183, 184, 215, 185, 186, 
	187, 181, 182, 182, 182, 10, 181, 183, 
	184, 216, 186, 187, 183, 184, 216, 186, 
	187, 181, 182, 182, 182, 10, 181, 183, 
	184, 185, 193, 186, 217, 187, 183, 184, 
	185, 193, 186, 217, 187, 181, 182, 182, 
	182, 10, 218, 183, 184, 185, 186, 187, 
	183, 184, 185, 186, 187, 218, 182, 182, 
	182, 10, 181, 183, 184, 219, 201, 186, 
	207, 187, 183, 184, 219, 201, 186, 207, 
	187, 181, 182, 182, 182, 10, 181, 183, 
	184, 185, 186, 220, 187, 183, 184, 185, 
	186, 220, 187, 181, 182, 182, 182, 10, 
	221, 183, 184, 185, 186, 187, 183, 184, 
	185, 186, 187, 221, 182, 182, 182, 10, 
	181, 183, 184, 185, 193, 186, 222, 183, 
	184, 185, 193, 186, 222, 181, 182, 182, 
	182, 10, 181, 183, 184, 223, 201, 186, 
	187, 183, 184, 223, 201, 186, 187, 181, 
	182, 182, 182, 10, 181, 183, 184, 224, 
	185, 186, 187, 183, 184, 224, 185, 186, 
	187, 181, 182, 182, 182, 10, 225, 226, 
	227, 228, 229, 230, 226, 227, 228, 229, 
	230, 225, 7, 225, 226, 227, 231, 229, 
	230, 226, 227, 231, 229, 230, 225, 7, 
	0
]

class << self
	attr_accessor :_parser_trans_targs
	private :_parser_trans_targs, :_parser_trans_targs=
end
self._parser_trans_targs = [
	1, 0, 2, 3, 4, 5, 3, 6, 
	175, 4, 6, 7, 8, 9, 13, 15, 
	21, 30, 33, 10, 11, 12, 46, 14, 
	45, 16, 17, 18, 19, 20, 26, 22, 
	23, 24, 25, 6, 27, 28, 29, 6, 
	31, 32, 6, 34, 35, 36, 44, 37, 
	38, 39, 40, 41, 42, 43, 6, 7, 
	47, 48, 49, 50, 137, 138, 139, 172, 
	145, 151, 51, 52, 53, 54, 55, 59, 
	61, 67, 72, 51, 52, 6, 53, 54, 
	55, 59, 61, 67, 72, 77, 80, 56, 
	57, 58, 93, 60, 92, 62, 63, 64, 
	65, 66, 73, 68, 69, 70, 71, 51, 
	74, 75, 76, 51, 78, 79, 51, 81, 
	82, 83, 91, 84, 85, 86, 87, 88, 
	89, 90, 51, 52, 94, 95, 96, 50, 
	97, 99, 100, 101, 134, 107, 113, 98, 
	98, 52, 99, 100, 101, 105, 107, 113, 
	119, 102, 103, 104, 131, 106, 130, 108, 
	109, 110, 111, 112, 118, 114, 115, 116, 
	117, 99, 74, 120, 121, 122, 123, 124, 
	125, 126, 127, 128, 129, 99, 52, 132, 
	133, 96, 135, 136, 99, 7, 137, 138, 
	139, 143, 145, 151, 157, 140, 141, 142, 
	169, 144, 168, 146, 147, 148, 149, 150, 
	156, 152, 153, 154, 155, 137, 27, 158, 
	159, 160, 161, 162, 163, 164, 165, 166, 
	167, 137, 7, 170, 171, 49, 173, 174, 
	137, 176, 8, 9, 13, 15, 21, 30
]

class << self
	attr_accessor :_parser_trans_actions
	private :_parser_trans_actions, :_parser_trans_actions=
end
self._parser_trans_actions = [
	0, 0, 0, 1, 3, 3, 0, 5, 
	5, 0, 0, 0, 17, 25, 0, 9, 
	0, 0, 0, 0, 0, 17, 0, 0, 
	0, 0, 0, 0, 17, 0, 0, 0, 
	0, 0, 13, 15, 0, 0, 0, 11, 
	0, 0, 23, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 19, 21, 
	0, 0, 0, 0, 27, 49, 43, 27, 
	46, 27, 27, 27, 27, 49, 43, 27, 
	46, 27, 27, 0, 0, 29, 29, 17, 
	25, 0, 9, 0, 0, 0, 0, 0, 
	0, 17, 0, 0, 0, 0, 0, 0, 
	17, 0, 0, 0, 0, 0, 13, 15, 
	0, 0, 0, 11, 0, 0, 23, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 19, 21, 0, 0, 0, 29, 
	29, 27, 49, 43, 27, 46, 27, 27, 
	29, 29, 0, 61, 25, 0, 55, 29, 
	29, 0, 0, 61, 29, 0, 0, 0, 
	0, 0, 61, 0, 0, 0, 0, 0, 
	58, 15, 29, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 19, 40, 0, 
	0, 29, 29, 0, 23, 29, 0, 61, 
	25, 0, 55, 29, 29, 0, 0, 61, 
	29, 0, 0, 0, 0, 0, 61, 0, 
	0, 0, 0, 0, 58, 15, 29, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 19, 40, 0, 0, 29, 29, 0, 
	23, 5, 34, 37, 5, 31, 5, 5
]

class << self
	attr_accessor :_parser_eof_actions
	private :_parser_eof_actions, :_parser_eof_actions=
end
self._parser_eof_actions = [
	0, 0, 0, 0, 0, 0, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 52, 52, 52, 52, 52, 
	52, 52, 52, 52, 52, 52, 52, 52, 
	52, 52, 52, 52, 52, 52, 52, 52, 
	52, 52, 52, 52, 52, 52, 52, 52, 
	52, 52, 52, 52, 52, 52, 52, 52, 
	52, 52, 52, 52, 52, 52, 52, 52, 
	52, 52, 52, 52, 52, 52, 52, 52, 
	52, 52, 52, 52, 52, 52, 52, 52, 
	52, 52, 52, 52, 52, 52, 52, 52, 
	52, 52, 52, 52, 52, 52, 52, 7, 
	7
]

class << self
	attr_accessor :parser_start
end
self.parser_start = 1;
class << self
	attr_accessor :parser_first_final
end
self.parser_first_final = 6;
class << self
	attr_accessor :parser_error
end
self.parser_error = 0;

class << self
	attr_accessor :parser_en_main
end
self.parser_en_main = 1;


# line 174 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
      # % (this fixes syntax highlighting)
      parens = 0
      p = item = 0
      pe = eof = data.length
      
# line 1172 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = parser_start
end

# line 179 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
      # % (this fixes syntax highlighting)
      
# line 1182 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _parser_key_offsets[cs]
	_trans = _parser_index_offsets[cs]
	_klen = _parser_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _parser_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _parser_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _parser_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _parser_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _parser_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _parser_indicies[_trans]
	cs = _parser_trans_targs[_trans]
	if _parser_trans_actions[_trans] != 0
		_acts = _parser_trans_actions[_trans]
		_nacts = _parser_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _parser_actions[_acts - 1]
when 0 then
# line 9 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin
 start_name = p                                               		end
when 1 then
# line 10 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin
 self.name = read(data, start_name, p)                        		end
when 2 then
# line 12 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin
 start_data_type = p                                          		end
when 4 then
# line 18 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin
 mark_primary_key = p - 1                                     		end
when 5 then
# line 19 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin

                             primary_key!
                             end_data_type ||= mark_primary_key
                           		end
when 6 then
# line 24 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin
 mark_unique = p - 5                                          		end
when 7 then
# line 25 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin

                             unique!
                             end_data_type ||= mark_unique
                           		end
when 8 then
# line 30 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin
 mark_autoincrement = p - 1                                   		end
when 9 then
# line 31 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin

                             autoincrement!
                             end_data_type ||= mark_autoincrement
                           		end
when 10 then
# line 36 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin
 mark_not_null = p - 4                                        		end
when 11 then
# line 37 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin

                             mark_not_null ||= nil
                             if mark_not_null
                               self.null = false
                               end_data_type ||= mark_not_null
                             else
                               self.null = true
                               end_data_type ||= p - 4
                             end
                           		end
when 12 then
# line 48 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin
 mark_default = p - 1                                         		end
when 13 then
# line 49 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin
 start_default = p                                            		end
when 14 then
# line 50 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin

                             memo = read(data, start_default, p)
                             memo.gsub! %{\\\'}, %{'}
                             memo.gsub! %{\\\"}, %{"}
                             memo.gsub! /(['"])\1/, '\1'
                             self.default = memo
                             end_data_type ||= mark_default
                           		end
# line 1344 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _parser_eof_actions[cs]
	__nacts =  _parser_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _parser_actions[__acts - 1]
when 3 then
# line 13 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin

                             end_data_type ||= p
                             self.data_type = read(data, start_data_type, end_data_type)
                           		end
when 14 then
# line 50 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
		begin

                             memo = read(data, start_default, p)
                             memo.gsub! %{\\\'}, %{'}
                             memo.gsub! %{\\\"}, %{"}
                             memo.gsub! /(['"])\1/, '\1'
                             self.default = memo
                             end_data_type ||= mark_default
                           		end
# line 1390 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 181 "/Users/seamusabshere/code/create_table/lib/create_table/column.rl.tmp"
      # % (this fixes syntax highlighting)
      self
    end

    # generating

    def to_sql(format, options)
      send "to_#{format}", options
    end

    def to_mysql(options)
      parts = []
      parts << CreateTable.quote_ident(name, options)
      parts << data_type
      if primary_key
        parts << 'PRIMARY KEY'
      elsif unique and not named_unique
        parts << 'UNIQUE'
      end
      if autoincrement
        parts << 'AUTO_INCREMENT'
      end
      parts.join ' '
    end

    def to_postgresql(options)
      parts = []
      parts << CreateTable.quote_ident(name, options)
      if autoincrement and data_type =~ /integer/i
        parts << 'SERIAL'
      else
        parts << data_type
      end
      if primary_key
        parts << 'PRIMARY KEY'
      elsif unique and not named_unique
        parts << 'UNIQUE'
      end
      parts.join ' '
    end

    def to_sqlite3(options)
      parts = []
      parts << CreateTable.quote_ident(name, options)
      parts << data_type
      if primary_key
        parts << 'PRIMARY KEY'
      elsif unique and not named_unique
        parts << 'UNIQUE'
      end
      if autoincrement
        parts << 'AUTOINCREMENT'
      end
      parts.join ' '
    end
  end
end
